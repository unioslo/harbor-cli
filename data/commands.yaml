artifact:
- category: artifact
  deprecated: false
  epilog: ''
  help: Get accessories for an artifact.
  hidden: false
  name: artifact accessories
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
      Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
    hidden: false
    human_readable_name: ARTIFACT
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <ARTIFACT>
    multiple: false
    name: artifact
    nargs: 1
    opts:
    - artifact
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
        Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: artifact
      opts:
      - artifact
      secondary_opts: []
      type: &id001 !!python/object:click.types.StringParamType {}
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: artifact accessories <ARTIFACT>
- category: artifact
  deprecated: false
  epilog: ''
  help: Get the build history of an artifact.
  hidden: false
  name: artifact buildhistory
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
      Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
    hidden: false
    human_readable_name: ARTIFACT
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <ARTIFACT>
    multiple: false
    name: artifact
    nargs: 1
    opts:
    - artifact
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
        Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: artifact
      opts:
      - artifact
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: artifact buildhistory <ARTIFACT>
- category: artifact
  deprecated: false
  epilog: ''
  help: Bulk delete artifacts that match one or more conditions.
  hidden: false
  name: artifact clean
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Project(s) to delete artifacts from. If not specified, all projects will
      be considered.
    hidden: false
    human_readable_name: project
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PROJECT,[PROJECT...]>
    multiple: true
    name: project
    nargs: 1
    opts:
    - --project
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: project
      opts:
      - --project
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: 1
      multiple: true
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Project(s) to delete artifacts from. If not specified, all projects will
        be considered.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Repository name(s) to delete artifacts from. If not specified, all repositories
      in the matched project(s) will be considered.
    hidden: false
    human_readable_name: repository
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <REPOSITORY,[REPOSITORY...]>
    multiple: true
    name: repository
    nargs: 1
    opts:
    - --repo
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: repository
      opts:
      - --repo
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: 1
      multiple: true
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Repository name(s) to delete artifacts from. If not specified, all repositories
        in the matched project(s) will be considered.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'CRITERIA: Delete artifacts older than the specified number of days.'
    hidden: false
    human_readable_name: age
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <AGE>
    multiple: false
    name: age
    nargs: 1
    opts:
    - --age
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: age
      opts:
      - --age
      secondary_opts: []
      type: &id002 !!python/object:click.types.IntParamType {}
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'CRITERIA: Delete artifacts older than the specified number of days.'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices:
    - Unknown
    - Negligible
    - Low
    - Medium
    - High
    - Critical
    - None
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'CRITERIA: Delete all artifacts with the given severity or higher.'
    hidden: false
    human_readable_name: severity
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SEVERITY>
    multiple: false
    name: severity
    nargs: 1
    opts:
    - --severity
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: severity
      opts:
      - --severity
      secondary_opts: []
      type: !!python/object:click.types.Choice
        choices:
        - Unknown
        - Negligible
        - Low
        - Medium
        - High
        - Critical
        - None
        case_sensitive: true
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'CRITERIA: Delete all artifacts with the given severity or higher.'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices:
    - and
    - or
    - xor
    count: false
    default: and
    envvar: null
    expose_value: true
    flag_value: false
    help: Operator to use when matching multiple criteria.
    hidden: false
    human_readable_name: operator
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <OPERATOR>
    multiple: false
    name: operator
    nargs: 1
    opts:
    - --operator
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: operator
      opts:
      - --operator
      secondary_opts: []
      type: !!python/object:click.types.Choice
        choices:
        - and
        - or
        - xor
        case_sensitive: true
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: and
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: Operator to use when matching multiple criteria.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Regex pattern for excluding artifacts from projects.
    hidden: false
    human_readable_name: except_project
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <EXCEPT_PROJECT>
    multiple: false
    name: except_project
    nargs: 1
    opts:
    - --except-project
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: except_project
      opts:
      - --except-project
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Regex pattern for excluding artifacts from projects.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Regex pattern for excluding artifacts from repositories.
    hidden: false
    human_readable_name: except_repo
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <EXCEPT_REPO>
    multiple: false
    name: except_repo
    nargs: 1
    opts:
    - --except-repo
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: except_repo
      opts:
      - --except-repo
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Regex pattern for excluding artifacts from repositories.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Regex pattern for artifacts with tags to exclude from deletion.
    hidden: false
    human_readable_name: except_tag
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <EXCEPT_TAG>
    multiple: false
    name: except_tag
    nargs: 1
    opts:
    - --except-tag
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: except_tag
      opts:
      - --except-tag
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Regex pattern for artifacts with tags to exclude from deletion.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Abort deletion if this number of artifacts would be deleted.
    hidden: false
    human_readable_name: max_count
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <MAX_COUNT>
    multiple: false
    name: max_count
    nargs: 1
    opts:
    - --max
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: max_count
      opts:
      - --max
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Abort deletion if this number of artifacts would be deleted.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Show which artifacts would be deleted, but don't do anything.
    hidden: false
    human_readable_name: dry_run
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <DRY_RUN>
    multiple: false
    name: dry_run
    nargs: 1
    opts:
    - --dryrun
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: dry_run
      opts:
      - --dryrun
      secondary_opts: []
      type: &id003 !!python/object:click.types.BoolParamType {}
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Show which artifacts would be deleted, but don't do anything.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Force deletion without confirmation.
    hidden: false
    human_readable_name: force
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <FORCE>
    multiple: false
    name: force
    nargs: 1
    opts:
    - --force
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: force
      opts:
      - --force
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Force deletion without confirmation.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Abort the operation and exit with non-zero exit code if an artifact cannot
      be deleted.
    hidden: false
    human_readable_name: exit_on_error
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <EXIT_ON_ERROR>
    multiple: false
    name: exit_on_error
    nargs: 1
    opts:
    - --exit-on-error
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: exit_on_error
      opts:
      - --exit-on-error
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Abort the operation and exit with non-zero exit code if an artifact cannot
        be deleted.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: artifact clean [OPTIONS]
- category: artifact
  deprecated: false
  epilog: ''
  help: Copy an artifact to a different repository.
  hidden: false
  name: artifact copy
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
      Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
    hidden: false
    human_readable_name: ARTIFACT
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <ARTIFACT>
    multiple: false
    name: artifact
    nargs: 1
    opts:
    - artifact
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
        Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: artifact
      opts:
      - artifact
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Destination project.
    hidden: false
    human_readable_name: PROJECT
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT>
    multiple: false
    name: project
    nargs: 1
    opts:
    - project
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Destination project.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project
      opts:
      - project
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Destination repository (without project name).
    hidden: false
    human_readable_name: REPOSITORY
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <REPOSITORY>
    multiple: false
    name: repository
    nargs: 1
    opts:
    - repository
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Destination repository (without project name).
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: repository
      opts:
      - repository
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: artifact copy <ARTIFACT> <PROJECT> <REPOSITORY>
- category: artifact
  deprecated: false
  epilog: ''
  help: Delete an artifact.
  hidden: false
  name: artifact delete
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
      Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
    hidden: false
    human_readable_name: ARTIFACT
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <ARTIFACT>
    multiple: false
    name: artifact
    nargs: 1
    opts:
    - artifact
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
        Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: artifact
      opts:
      - artifact
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Force deletion without confirmation.
    hidden: false
    human_readable_name: force
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <FORCE>
    multiple: false
    name: force
    nargs: 1
    opts:
    - --force
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: force
      opts:
      - --force
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Force deletion without confirmation.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: artifact delete <ARTIFACT> [OPTIONS]
- category: artifact
  deprecated: false
  epilog: ''
  help: Get information about a specific artifact.
  hidden: false
  name: artifact get
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
      Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
    hidden: false
    human_readable_name: ARTIFACT
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <ARTIFACT>
    multiple: false
    name: artifact
    nargs: 1
    opts:
    - artifact
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
        Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: artifact
      opts:
      - artifact
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Include vulnerability report in output.
    hidden: false
    human_readable_name: with_vulnerabilities
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <WITH_VULNERABILITIES>
    multiple: false
    name: with_vulnerabilities
    nargs: 1
    opts:
    - --with-vuln
    - -v
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: with_vulnerabilities
      opts:
      - --with-vuln
      - -v
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Include vulnerability report in output.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Include descriptions of each vulnerability in the output.
    hidden: false
    human_readable_name: with_vuln_descriptions
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <WITH_VULN_DESCRIPTIONS>
    multiple: false
    name: with_vuln_descriptions
    nargs: 1
    opts:
    - --with-vuln-desc
    - -d
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: with_vuln_descriptions
      opts:
      - --with-vuln-desc
      - -d
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Include descriptions of each vulnerability in the output.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: artifact get <ARTIFACT> [OPTIONS]
- category: artifact
  deprecated: false
  epilog: ''
  help: List artifacts in one or more projects and/or repositories.
  hidden: false
  name: artifact list
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: []
    envvar: null
    expose_value: true
    flag_value: true
    help: Project name(s). (e.g. [bold magenta]'library'[/]).
    hidden: false
    human_readable_name: project
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PROJECT,[PROJECT...]>
    multiple: true
    name: project
    nargs: 1
    opts:
    - --project
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: project
      opts:
      - --project
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: 1
      multiple: true
      expose_value: true
      default: []
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Project name(s). (e.g. [bold magenta]'library'[/]).
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: []
    envvar: null
    expose_value: true
    flag_value: true
    help: Repository name(s).(e.g. [bold magenta]'hello-world'[/]).
    hidden: false
    human_readable_name: repo
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <REPO,[REPO...]>
    multiple: true
    name: repo
    nargs: 1
    opts:
    - --repo
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: repo
      opts:
      - --repo
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: 1
      multiple: true
      expose_value: true
      default: []
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Repository name(s).(e.g. [bold magenta]'hello-world'[/]).
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Query parameters to filter the results.
    hidden: false
    human_readable_name: query
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <QUERY>
    multiple: false
    name: query
    nargs: 1
    opts:
    - --query
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: query
      opts:
      - --query
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Query parameters to filter the results.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: []
    envvar: null
    expose_value: true
    flag_value: true
    help: Limit to artifacts with tag(s) (e.g. [bold magenta]'latest'[/]).
    hidden: false
    human_readable_name: tag
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <TAG,[TAG...]>
    multiple: true
    name: tag
    nargs: 1
    opts:
    - --tag
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: tag
      opts:
      - --tag
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: 1
      multiple: true
      expose_value: true
      default: []
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Limit to artifacts with tag(s) (e.g. [bold magenta]'latest'[/]).
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: []
    envvar: null
    expose_value: true
    flag_value: true
    help: Limit to artifacts with architecture(s) (e.g. [bold magenta]'amd64,arm64'[/]).
    hidden: false
    human_readable_name: architecture
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <ARCH,[ARCH...]>
    multiple: true
    name: architecture
    nargs: 1
    opts:
    - --arch
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: architecture
      opts:
      - --arch
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: 1
      multiple: true
      expose_value: true
      default: []
      is_eager: false
      metavar: arch
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Limit to artifacts with architecture(s) (e.g. [bold magenta]'amd64,arm64'[/]).
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: []
    envvar: null
    expose_value: true
    flag_value: true
    help: Limit to artifacts with OS(es) (e.g. [bold magenta]'linux,freebsd'[/]).
    hidden: false
    human_readable_name: os
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <OS,[OS...]>
    multiple: true
    name: os
    nargs: 1
    opts:
    - --os
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: os
      opts:
      - --os
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: 1
      multiple: true
      expose_value: true
      default: []
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Limit to artifacts with OS(es) (e.g. [bold magenta]'linux,freebsd'[/]).
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Include vulnerability report in output.
    hidden: false
    human_readable_name: with_report
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <WITH_REPORT>
    multiple: false
    name: with_report
    nargs: 1
    opts:
    - --with-report
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: with_report
      opts:
      - --with-report
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Include vulnerability report in output.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 5
    envvar: null
    expose_value: true
    flag_value: false
    help: Maximum number of concurrent connections to use. Setting this too high can
      lead to severe performance degradation.
    hidden: false
    human_readable_name: max_connections
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <MAX_CONNECTIONS>
    multiple: false
    name: max_connections
    nargs: 1
    opts:
    - --max-connections
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: max_connections
      opts:
      - --max-connections
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 5
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: Maximum number of concurrent connections to use. Setting this too high
        can lead to severe performance degradation.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: artifact list [OPTIONS]
artifact label:
- category: artifact label
  deprecated: false
  epilog: ''
  help: Add a label to an artifact.
  hidden: false
  name: artifact label add
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
      Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
    hidden: false
    human_readable_name: ARTIFACT
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <ARTIFACT>
    multiple: false
    name: artifact
    nargs: 1
    opts:
    - artifact
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
        Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: artifact
      opts:
      - artifact
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Name of the label.
    hidden: false
    human_readable_name: name
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <NAME>
    multiple: false
    name: name
    nargs: 1
    opts:
    - --name
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: name
      opts:
      - --name
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Name of the label.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Description of the label.
    hidden: false
    human_readable_name: description
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <DESCRIPTION>
    multiple: false
    name: description
    nargs: 1
    opts:
    - --description
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: description
      opts:
      - --description
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Description of the label.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Label color.
    hidden: false
    human_readable_name: color
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <COLOR>
    multiple: false
    name: color
    nargs: 1
    opts:
    - --color
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: color
      opts:
      - --color
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Label color.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Scope of the label.
    hidden: false
    human_readable_name: scope
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SCOPE>
    multiple: false
    name: scope
    nargs: 1
    opts:
    - --scope
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: scope
      opts:
      - --scope
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Scope of the label.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: artifact label add <ARTIFACT> [OPTIONS]
- category: artifact label
  deprecated: false
  epilog: ''
  help: Remove a label from an artifact.
  hidden: false
  name: artifact label delete
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
      Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
    hidden: false
    human_readable_name: ARTIFACT
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <ARTIFACT>
    multiple: false
    name: artifact
    nargs: 1
    opts:
    - artifact
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
        Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: artifact
      opts:
      - artifact
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID of the label to delete.
    hidden: false
    human_readable_name: LABEL_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <LABEL_ID>
    multiple: false
    name: label_id
    nargs: 1
    opts:
    - label_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: ID of the label to delete.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: label_id
      opts:
      - label_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Force deletion without confirmation.
    hidden: false
    human_readable_name: force
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <FORCE>
    multiple: false
    name: force
    nargs: 1
    opts:
    - --force
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: force
      opts:
      - --force
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Force deletion without confirmation.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: artifact label delete <ARTIFACT> <LABEL_ID> [OPTIONS]
artifact tag:
- category: artifact tag
  deprecated: false
  epilog: ''
  help: Create a tag for an artifact.
  hidden: false
  name: artifact tag create
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
      Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
    hidden: false
    human_readable_name: ARTIFACT
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <ARTIFACT>
    multiple: false
    name: artifact
    nargs: 1
    opts:
    - artifact
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
        Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: artifact
      opts:
      - artifact
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of the tag to create.
    hidden: false
    human_readable_name: TAG
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <TAG>
    multiple: false
    name: tag
    nargs: 1
    opts:
    - tag
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name of the tag to create.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: tag
      opts:
      - tag
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: artifact tag create <ARTIFACT> <TAG>
- category: artifact tag
  deprecated: false
  epilog: ''
  help: Delete a tag for an artifact.
  hidden: false
  name: artifact tag delete
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
      Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
    hidden: false
    human_readable_name: ARTIFACT
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <ARTIFACT>
    multiple: false
    name: artifact
    nargs: 1
    opts:
    - artifact
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
        Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: artifact
      opts:
      - artifact
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of the tag to delete.
    hidden: false
    human_readable_name: TAG
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <TAG>
    multiple: false
    name: tag
    nargs: 1
    opts:
    - tag
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name of the tag to delete.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: tag
      opts:
      - tag
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Force deletion without confirmation.
    hidden: false
    human_readable_name: force
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <FORCE>
    multiple: false
    name: force
    nargs: 1
    opts:
    - --force
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: force
      opts:
      - --force
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Force deletion without confirmation.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: artifact tag delete <ARTIFACT> <TAG> [OPTIONS]
- category: artifact tag
  deprecated: false
  epilog: ''
  help: List tags for an artifact.
  hidden: false
  name: artifact tag list
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
      Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
    hidden: false
    human_readable_name: ARTIFACT
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <ARTIFACT>
    multiple: false
    name: artifact
    nargs: 1
    opts:
    - artifact
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
        Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: artifact
      opts:
      - artifact
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Query parameters to filter the results.
    hidden: false
    human_readable_name: query
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <QUERY>
    multiple: false
    name: query
    nargs: 1
    opts:
    - --query
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: query
      opts:
      - --query
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Query parameters to filter the results.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort by
      name ascending and id descending.'
    hidden: false
    human_readable_name: sort
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SORT>
    multiple: false
    name: sort
    nargs: 1
    opts:
    - --sort
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: sort
      opts:
      - --sort
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort
        by name ascending and id descending.'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 1
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Page to begin fetching from.
    hidden: false
    human_readable_name: page
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE>
    multiple: false
    name: page
    nargs: 1
    opts:
    - --page
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page
      opts:
      - --page
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Page to begin fetching from.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Results to fetch per API call.
    hidden: false
    human_readable_name: page_size
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE_SIZE>
    multiple: false
    name: page_size
    nargs: 1
    opts:
    - --page-size
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page_size
      opts:
      - --page-size
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Results to fetch per API call.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Maximum number of results to fetch.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LIMIT>
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: limit
      opts:
      - --limit
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Maximum number of results to fetch.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: artifact tag list <ARTIFACT> [OPTIONS]
artifact vulnerability:
- category: artifact vulnerability
  deprecated: false
  epilog: ''
  help: 'Find artifacts affected by a given CVE or vulnerable package.


    :information: The output of this command is slated to change in the future.

    It desperately needs a facelift. Hidden until this is resolved.'
  hidden: true
  name: artifact vulnerability find
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: []
    envvar: null
    expose_value: true
    flag_value: true
    help: CVE ID(s) to search for.
    hidden: false
    human_readable_name: cve
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <CVE,[CVE...]>
    multiple: true
    name: cve
    nargs: 1
    opts:
    - --cve
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: cve
      opts:
      - --cve
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: 1
      multiple: true
      expose_value: true
      default: []
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: CVE ID(s) to search for.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: []
    envvar: null
    expose_value: true
    flag_value: true
    help: 'Name of package(s) used by artifacts to search for. Can contain a semver
      min and max range, similar to PEP 440, e.g. [bold magenta]''foo>=1.0.0,<2.0.0''[/].
      [yellow]WARNING: Minimum and maximum version limits are always inclusive (i.e.
      >= and > are the same)[/]'
    hidden: false
    human_readable_name: package
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PACKAGE,[PACKAGE...]>
    multiple: true
    name: package
    nargs: 1
    opts:
    - --package
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: package
      opts:
      - --package
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: true
      expose_value: true
      default: []
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'Name of package(s) used by artifacts to search for. Can contain a semver
        min and max range, similar to PEP 440, e.g. [bold magenta]''foo>=1.0.0,<2.0.0''[/].
        [yellow]WARNING: Minimum and maximum version limits are always inclusive (i.e.
        >= and > are the same)[/]'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Project(s) to get vulnerabilities for. If not specified, all projects will
      be considered.
    hidden: false
    human_readable_name: project
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PROJECT,[PROJECT...]>
    multiple: true
    name: project
    nargs: 1
    opts:
    - --project
    - -p
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: project
      opts:
      - --project
      - -p
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: 1
      multiple: true
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Project(s) to get vulnerabilities for. If not specified, all projects
        will be considered.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Repositories to search in. Can be either full name ('project/repo') or repo
      name only ('repo'). If not specified, all repositories in the project(s) will
      be considered.
    hidden: false
    human_readable_name: repo
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <REPO,[REPO...]>
    multiple: true
    name: repo
    nargs: 1
    opts:
    - --repo
    - -r
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: repo
      opts:
      - --repo
      - -r
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: 1
      multiple: true
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Repositories to search in. Can be either full name ('project/repo') or
        repo name only ('repo'). If not specified, all repositories in the project(s)
        will be considered.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Artifact tag(s) to filter for. If not specified, all tags in the repository(s)
      will be considered.
    hidden: false
    human_readable_name: tags
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <TAGS,[TAGS...]>
    multiple: true
    name: tags
    nargs: 1
    opts:
    - --tag
    - -t
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: tags
      opts:
      - --tag
      - -t
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: 1
      multiple: true
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Artifact tag(s) to filter for. If not specified, all tags in the repository(s)
        will be considered.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 5
    envvar: null
    expose_value: true
    flag_value: false
    help: Maximum number of concurrent connections to the Harbor API.
    hidden: false
    human_readable_name: max_connections
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <MAX_CONNECTIONS>
    multiple: false
    name: max_connections
    nargs: 1
    opts:
    - --max-connections
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: max_connections
      opts:
      - --max-connections
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 5
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: Maximum number of concurrent connections to the Harbor API.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices:
    - and
    - or
    - xor
    count: false
    default: or
    envvar: null
    expose_value: true
    flag_value: false
    help: Operator to use when querying a combination of multiple CVEs or packages.
    hidden: false
    human_readable_name: operator
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <OPERATOR>
    multiple: false
    name: operator
    nargs: 1
    opts:
    - --operator
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: operator
      opts:
      - --operator
      secondary_opts: []
      type: !!python/object:click.types.Choice
        choices:
        - and
        - or
        - xor
        case_sensitive: true
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: or
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: Operator to use when querying a combination of multiple CVEs or packages.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: artifact vulnerability find [OPTIONS]
- category: artifact vulnerability
  deprecated: false
  epilog: ''
  help: Show a summary of vulnerabilities for artifacts in a project or repository.
  hidden: false
  name: artifact vulnerability summary
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: []
    envvar: null
    expose_value: true
    flag_value: true
    help: Name of projects to check.
    hidden: false
    human_readable_name: project
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PROJECT,[PROJECT...]>
    multiple: true
    name: project
    nargs: 1
    opts:
    - --project
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: project
      opts:
      - --project
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: 1
      multiple: true
      expose_value: true
      default: []
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Name of projects to check.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: []
    envvar: null
    expose_value: true
    flag_value: true
    help: Name of repositories to check.
    hidden: false
    human_readable_name: repo
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <REPO,[REPO...]>
    multiple: true
    name: repo
    nargs: 1
    opts:
    - --repo
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: repo
      opts:
      - --repo
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: 1
      multiple: true
      expose_value: true
      default: []
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Name of repositories to check.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Query parameters to filter the results.
    hidden: false
    human_readable_name: query
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <QUERY>
    multiple: false
    name: query
    nargs: 1
    opts:
    - --query
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: query
      opts:
      - --query
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Query parameters to filter the results.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices:
    - total
    - severity
    - name
    - age
    count: false
    default: !!python/object/apply:harbor_cli.commands.api.artifact.ArtifactSummarySorting
    - total
    envvar: null
    expose_value: true
    flag_value: false
    help: Artifact attribute to sort by.
    hidden: false
    human_readable_name: sort
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SORT>
    multiple: false
    name: sort
    nargs: 1
    opts:
    - --sort
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: sort
      opts:
      - --sort
      secondary_opts: []
      type: !!python/object:click.types.Choice
        choices:
        - total
        - severity
        - name
        - age
        case_sensitive: false
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: !!python/object/apply:harbor_cli.commands.api.artifact.ArtifactSummarySorting
      - total
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: Artifact attribute to sort by.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices:
    - asc
    - desc
    count: false
    default: !!python/object/apply:harbor_cli.commands.api.artifact.SortOrder
    - desc
    envvar: null
    expose_value: true
    flag_value: false
    help: Sorting order of artifacts.
    hidden: false
    human_readable_name: order
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <ORDER>
    multiple: false
    name: order
    nargs: 1
    opts:
    - --order
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: order
      opts:
      - --order
      secondary_opts: []
      type: !!python/object:click.types.Choice
        choices:
        - asc
        - desc
        case_sensitive: false
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: !!python/object/apply:harbor_cli.commands.api.artifact.SortOrder
      - desc
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: Sorting order of artifacts.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Show full artifact digests.
    hidden: false
    human_readable_name: full_digest
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <FULL_DIGEST>
    multiple: false
    name: full_digest
    nargs: 1
    opts:
    - --full-digest
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: full_digest
      opts:
      - --full-digest
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Show full artifact digests.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: artifact vulnerability summary [OPTIONS]
auditlog:
- category: auditlog
  deprecated: false
  epilog: ''
  help: 'List audit logs for projects the current user has access to.

    Recommended to specify a search query and to limit the number of results.'
  hidden: false
  name: auditlog list
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Operation(s) to filter audit logs by. E.g. [bold magenta]'create'[/].
    hidden: false
    human_readable_name: operation
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <OPERATION,[OPERATION...]>
    multiple: true
    name: operation
    nargs: 1
    opts:
    - --operation
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: operation
      opts:
      - --operation
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: 1
      multiple: true
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Operation(s) to filter audit logs by. E.g. [bold magenta]'create'[/].
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Full name of the resource(s) to filter by. E.g. [bold magenta]'library/foo:latest'[/].
    hidden: false
    human_readable_name: resource
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <RESOURCE,[RESOURCE...]>
    multiple: true
    name: resource
    nargs: 1
    opts:
    - --resource
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: resource
      opts:
      - --resource
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: 1
      multiple: true
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Full name of the resource(s) to filter by. E.g. [bold magenta]'library/foo:latest'[/].
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Resource type(s) to filter audit logs by. E.g. [bold magenta]'artifact'[/].
    hidden: false
    human_readable_name: resource_type
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <RESOURCE_TYPE,[RESOURCE_TYPE...]>
    multiple: true
    name: resource_type
    nargs: 1
    opts:
    - --resource-type
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: resource_type
      opts:
      - --resource-type
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: 1
      multiple: true
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Resource type(s) to filter audit logs by. E.g. [bold magenta]'artifact'[/].
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Username to filter audit logs by.
    hidden: false
    human_readable_name: username
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <USERNAME,[USERNAME...]>
    multiple: true
    name: username
    nargs: 1
    opts:
    - --username
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: username
      opts:
      - --username
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: 1
      multiple: true
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Username to filter audit logs by.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Query parameters to filter the results.
    hidden: false
    human_readable_name: query
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <QUERY>
    multiple: false
    name: query
    nargs: 1
    opts:
    - --query
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: query
      opts:
      - --query
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Query parameters to filter the results.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort by
      name ascending and id descending.'
    hidden: false
    human_readable_name: sort
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SORT>
    multiple: false
    name: sort
    nargs: 1
    opts:
    - --sort
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: sort
      opts:
      - --sort
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort
        by name ascending and id descending.'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 1
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Page to begin fetching from.
    hidden: false
    human_readable_name: page
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE>
    multiple: false
    name: page
    nargs: 1
    opts:
    - --page
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page
      opts:
      - --page
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Page to begin fetching from.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Results to fetch per API call.
    hidden: false
    human_readable_name: page_size
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE_SIZE>
    multiple: false
    name: page_size
    nargs: 1
    opts:
    - --page-size
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page_size
      opts:
      - --page-size
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Results to fetch per API call.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: Maximum number of results to fetch.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LIMIT>
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: limit
      opts:
      - --limit
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: Maximum number of results to fetch.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: auditlog list [OPTIONS]
auditlog rotation:
- category: auditlog rotation
  deprecated: false
  epilog: ''
  help: Get a log rotation job.
  hidden: false
  name: auditlog rotation get
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Log rotation job ID
    hidden: false
    human_readable_name: JOB_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <JOB_ID>
    multiple: false
    name: job_id
    nargs: 1
    opts:
    - job_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Log rotation job ID
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: job_id
      opts:
      - job_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: auditlog rotation get <JOB_ID>
- category: auditlog rotation
  deprecated: false
  epilog: ''
  help: List log rotation job logs.
  hidden: false
  name: auditlog rotation list
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Query parameters to filter the results.
    hidden: false
    human_readable_name: query
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <QUERY>
    multiple: false
    name: query
    nargs: 1
    opts:
    - --query
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: query
      opts:
      - --query
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Query parameters to filter the results.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort by
      name ascending and id descending.'
    hidden: false
    human_readable_name: sort
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SORT>
    multiple: false
    name: sort
    nargs: 1
    opts:
    - --sort
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: sort
      opts:
      - --sort
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort
        by name ascending and id descending.'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 1
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Page to begin fetching from.
    hidden: false
    human_readable_name: page
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE>
    multiple: false
    name: page
    nargs: 1
    opts:
    - --page
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page
      opts:
      - --page
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Page to begin fetching from.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Results to fetch per API call.
    hidden: false
    human_readable_name: page_size
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE_SIZE>
    multiple: false
    name: page_size
    nargs: 1
    opts:
    - --page-size
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page_size
      opts:
      - --page-size
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Results to fetch per API call.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Maximum number of results to fetch.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LIMIT>
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: limit
      opts:
      - --limit
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Maximum number of results to fetch.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: auditlog rotation list [OPTIONS]
- category: auditlog rotation
  deprecated: false
  epilog: ''
  help: Get the log for a log rotation job.
  hidden: false
  name: auditlog rotation log
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Log rotation job ID
    hidden: false
    human_readable_name: JOB_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <JOB_ID>
    multiple: false
    name: job_id
    nargs: 1
    opts:
    - job_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Log rotation job ID
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: job_id
      opts:
      - job_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: auditlog rotation log <JOB_ID>
- category: auditlog rotation
  deprecated: false
  epilog: ''
  help: Stop a log rotation job.
  hidden: false
  name: auditlog rotation stop
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Log rotation job ID
    hidden: false
    human_readable_name: JOB_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <JOB_ID>
    multiple: false
    name: job_id
    nargs: 1
    opts:
    - job_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Log rotation job ID
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: job_id
      opts:
      - job_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: auditlog rotation stop <JOB_ID>
auditlog rotation schedule:
- category: auditlog rotation schedule
  deprecated: false
  epilog: ''
  help: Create an audit log rotation schedule.
  hidden: false
  name: auditlog rotation schedule create
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Type of schedule, e.g. [bold magenta]'Hourly'[/]. Mutually exclusive with
      [green]--cron[/].
    hidden: false
    human_readable_name: type
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <TYPE>
    multiple: false
    name: type
    nargs: 1
    opts:
    - --type
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: type
      opts:
      - --type
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Type of schedule, e.g. [bold magenta]'Hourly'[/]. Mutually exclusive with
        [green]--cron[/].
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Cron expression, e.g. [bold magenta]'0 0 * * *'[/]
    hidden: false
    human_readable_name: cron
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <CRON>
    multiple: false
    name: cron
    nargs: 1
    opts:
    - --cron
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: cron
      opts:
      - --cron
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Cron expression, e.g. [bold magenta]'0 0 * * *'[/]
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Number of hours to retain audit logs, e.g. [bold magenta]'168'[/]
    hidden: false
    human_readable_name: audit_retention_hour
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <AUDIT_RETENTION_HOUR>
    multiple: false
    name: audit_retention_hour
    nargs: 1
    opts:
    - --retention-hours
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: audit_retention_hour
      opts:
      - --retention-hours
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Number of hours to retain audit logs, e.g. [bold magenta]'168'[/]
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Operations to rotate logs for e.g. [bold magenta]'create,delete,pull'[/]
    hidden: false
    human_readable_name: operations
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <OPERATIONS,[OPERATIONS...]>
    multiple: true
    name: operations
    nargs: 1
    opts:
    - --operations
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: operations
      opts:
      - --operations
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: 1
      multiple: true
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Operations to rotate logs for e.g. [bold magenta]'create,delete,pull'[/]
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Dry run
    hidden: false
    human_readable_name: dry_run
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <DRY_RUN>
    multiple: false
    name: dry_run
    nargs: 1
    opts:
    - --dry-run
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-dry-run
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: dry_run
      opts:
      - --dry-run
      secondary_opts:
      - --no-dry-run
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Dry run
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: auditlog rotation schedule create [OPTIONS]
- category: auditlog rotation schedule
  deprecated: false
  epilog: ''
  help: Get the log rotation schedule.
  hidden: false
  name: auditlog rotation schedule get
  options_metavar: '[OPTIONS]'
  params: []
  score: 0
  short_help: ''
  usage: auditlog rotation schedule get
- category: auditlog rotation schedule
  deprecated: false
  epilog: ''
  help: Update the audit log rotation schedule.
  hidden: false
  name: auditlog rotation schedule update
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Type of schedule, e.g. [bold magenta]'Hourly'[/]. Mutually exclusive with
      [green]--cron[/].
    hidden: false
    human_readable_name: type
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <TYPE>
    multiple: false
    name: type
    nargs: 1
    opts:
    - --type
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: type
      opts:
      - --type
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Type of schedule, e.g. [bold magenta]'Hourly'[/]. Mutually exclusive with
        [green]--cron[/].
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Cron expression, e.g. [bold magenta]'0 0 * * *'[/]
    hidden: false
    human_readable_name: cron
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <CRON>
    multiple: false
    name: cron
    nargs: 1
    opts:
    - --cron
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: cron
      opts:
      - --cron
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Cron expression, e.g. [bold magenta]'0 0 * * *'[/]
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Number of hours to retain audit logs, e.g. [bold magenta]168[/]
    hidden: false
    human_readable_name: audit_retention_hour
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <AUDIT_RETENTION_HOUR>
    multiple: false
    name: audit_retention_hour
    nargs: 1
    opts:
    - --retention-hours
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: audit_retention_hour
      opts:
      - --retention-hours
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Number of hours to retain audit logs, e.g. [bold magenta]168[/]
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Operations to rotate logs for e.g. [bold magenta]'create,delete,pull'[/]
    hidden: false
    human_readable_name: operations
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <OPERATIONS,[OPERATIONS...]>
    multiple: true
    name: operations
    nargs: 1
    opts:
    - --operations
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: operations
      opts:
      - --operations
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: 1
      multiple: true
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Operations to rotate logs for e.g. [bold magenta]'create,delete,pull'[/]
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Dry run
    hidden: false
    human_readable_name: dry_run
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <DRY_RUN>
    multiple: false
    name: dry_run
    nargs: 1
    opts:
    - --dry-run
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-dry-run
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: dry_run
      opts:
      - --dry-run
      secondary_opts:
      - --no-dry-run
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Dry run
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: auditlog rotation schedule update [OPTIONS]
? ''
: - category: ''
    deprecated: false
    epilog: ''
    help: List all commands.
    hidden: false
    name: commands
    options_metavar: '[OPTIONS]'
    params: []
    score: 0
    short_help: ''
    usage: commands
  - category: ''
    deprecated: false
    epilog: ''
    help: Search for commands based on names and descriptions.
    hidden: false
    name: find
    options_metavar: '[OPTIONS]'
    params:
    - allow_from_autoenv: null
      confirmation_prompt: null
      choices: null
      count: null
      default: null
      envvar: null
      expose_value: true
      flag_value: null
      help: The search query.
      hidden: false
      human_readable_name: QUERY
      is_argument: true
      is_eager: false
      is_bool_flag: null
      is_flag: null
      is_option: null
      max: null
      min: null
      metavar: <QUERY>
      multiple: false
      name: query
      nargs: -1
      opts:
      - query
      prompt: null
      prompt_required: null
      required: true
      secondary_opts: []
      show_choices: true
      show_default: true
      show_envvar: true
      type: text
      value_from_envvar: !!python/object/apply:builtins.getattr
      - !!python/object:typer.core.TyperArgument
        help: The search query.
        show_default: true
        show_choices: true
        show_envvar: true
        hidden: false
        rich_help_panel: null
        name: query
        opts:
        - query
        secondary_opts: []
        type: *id001
        required: true
        callback: null
        nargs: -1
        multiple: false
        expose_value: true
        default: null
        is_eager: false
        metavar: null
        envvar: null
        _custom_shell_complete: null
      - value_from_envvar
    - allow_from_autoenv: true
      confirmation_prompt: false
      choices: null
      count: false
      default: null
      envvar: null
      expose_value: true
      flag_value: true
      help: Maximum number of results to show.
      hidden: false
      human_readable_name: limit
      is_argument: false
      is_eager: false
      is_bool_flag: false
      is_flag: false
      is_option: null
      max: null
      min: 1
      metavar: <LIMIT>
      multiple: false
      name: limit
      nargs: 1
      opts:
      - --limit
      prompt: null
      prompt_required: true
      required: false
      secondary_opts: []
      show_choices: true
      show_default: true
      show_envvar: true
      type: integer range
      value_from_envvar: !!python/object/apply:builtins.getattr
      - !!python/object:typer.core.TyperOption
        name: limit
        opts:
        - --limit
        secondary_opts: []
        type: !!python/object:click.types.IntRange
          min: 1
          max: null
          min_open: false
          max_open: false
          clamp: false
        required: false
        callback: null
        nargs: 1
        multiple: false
        expose_value: true
        default: null
        is_eager: false
        metavar: null
        envvar: null
        _custom_shell_complete: null
        prompt: null
        confirmation_prompt: false
        prompt_required: true
        hide_input: false
        hidden: false
        _flag_needs_value: false
        is_flag: false
        is_bool_flag: false
        flag_value: true
        count: false
        allow_from_autoenv: true
        help: Maximum number of results to show.
        show_default: true
        show_choices: true
        show_envvar: true
        rich_help_panel: null
      - value_from_envvar
    - allow_from_autoenv: true
      confirmation_prompt: false
      choices: null
      count: false
      default: 75
      envvar: null
      expose_value: true
      flag_value: false
      help: Minimum match ratio to show. Lower = more results.
      hidden: false
      human_readable_name: min_score
      is_argument: false
      is_eager: false
      is_bool_flag: false
      is_flag: false
      is_option: null
      max: 100
      min: 0
      metavar: <MIN_SCORE>
      multiple: false
      name: min_score
      nargs: 1
      opts:
      - --min-score
      prompt: null
      prompt_required: true
      required: false
      secondary_opts: []
      show_choices: true
      show_default: true
      show_envvar: true
      type: integer range
      value_from_envvar: !!python/object/apply:builtins.getattr
      - !!python/object:typer.core.TyperOption
        name: min_score
        opts:
        - --min-score
        secondary_opts: []
        type: !!python/object:click.types.IntRange
          min: 0
          max: 100
          min_open: false
          max_open: false
          clamp: false
        required: false
        callback: null
        nargs: 1
        multiple: false
        expose_value: true
        default: 75
        is_eager: false
        metavar: null
        envvar: null
        _custom_shell_complete: null
        prompt: null
        confirmation_prompt: false
        prompt_required: true
        hide_input: false
        hidden: false
        _flag_needs_value: false
        is_flag: false
        is_bool_flag: false
        flag_value: false
        count: false
        allow_from_autoenv: true
        help: Minimum match ratio to show. Lower = more results.
        show_default: true
        show_choices: true
        show_envvar: true
        rich_help_panel: null
      - value_from_envvar
    - allow_from_autoenv: true
      confirmation_prompt: false
      choices: null
      count: false
      default: true
      envvar: null
      expose_value: true
      flag_value: false
      help: Search in command names.
      hidden: false
      human_readable_name: names
      is_argument: false
      is_eager: false
      is_bool_flag: true
      is_flag: true
      is_option: null
      max: null
      min: null
      metavar: <NAMES>
      multiple: false
      name: names
      nargs: 1
      opts:
      - --names
      prompt: null
      prompt_required: true
      required: false
      secondary_opts:
      - --no-names
      show_choices: true
      show_default: true
      show_envvar: true
      type: boolean
      value_from_envvar: !!python/object/apply:builtins.getattr
      - !!python/object:typer.core.TyperOption
        name: names
        opts:
        - --names
        secondary_opts:
        - --no-names
        type: *id003
        required: false
        callback: null
        nargs: 1
        multiple: false
        expose_value: true
        default: true
        is_eager: false
        metavar: null
        envvar: null
        _custom_shell_complete: null
        prompt: null
        confirmation_prompt: false
        prompt_required: true
        hide_input: false
        hidden: false
        _flag_needs_value: false
        is_flag: true
        is_bool_flag: true
        flag_value: false
        count: false
        allow_from_autoenv: true
        help: Search in command names.
        show_default: true
        show_choices: true
        show_envvar: true
        rich_help_panel: null
      - value_from_envvar
    - allow_from_autoenv: true
      confirmation_prompt: false
      choices: null
      count: false
      default: true
      envvar: null
      expose_value: true
      flag_value: false
      help: Search in command descriptions.
      hidden: false
      human_readable_name: descriptions
      is_argument: false
      is_eager: false
      is_bool_flag: true
      is_flag: true
      is_option: null
      max: null
      min: null
      metavar: <DESCRIPTIONS>
      multiple: false
      name: descriptions
      nargs: 1
      opts:
      - --descriptions
      prompt: null
      prompt_required: true
      required: false
      secondary_opts:
      - --no-descriptions
      show_choices: true
      show_default: true
      show_envvar: true
      type: boolean
      value_from_envvar: !!python/object/apply:builtins.getattr
      - !!python/object:typer.core.TyperOption
        name: descriptions
        opts:
        - --descriptions
        secondary_opts:
        - --no-descriptions
        type: *id003
        required: false
        callback: null
        nargs: 1
        multiple: false
        expose_value: true
        default: true
        is_eager: false
        metavar: null
        envvar: null
        _custom_shell_complete: null
        prompt: null
        confirmation_prompt: false
        prompt_required: true
        hide_input: false
        hidden: false
        _flag_needs_value: false
        is_flag: true
        is_bool_flag: true
        flag_value: false
        count: false
        allow_from_autoenv: true
        help: Search in command descriptions.
        show_default: true
        show_choices: true
        show_envvar: true
        rich_help_panel: null
      - value_from_envvar
    - allow_from_autoenv: true
      confirmation_prompt: false
      choices:
      - ratio
      - partial-ratio
      - token-sort-ratio
      - token-set-ratio
      count: false
      default: partial-ratio
      envvar: null
      expose_value: true
      flag_value: false
      help: The matching strategy to use. Strategies require different scoring thresholds.
        The default threshold is optimized for partial ratio.
      hidden: false
      human_readable_name: strategy
      is_argument: false
      is_eager: false
      is_bool_flag: false
      is_flag: false
      is_option: null
      max: null
      min: null
      metavar: <STRATEGY>
      multiple: false
      name: strategy
      nargs: 1
      opts:
      - --strategy
      prompt: null
      prompt_required: true
      required: false
      secondary_opts: []
      show_choices: true
      show_default: true
      show_envvar: true
      type: choice
      value_from_envvar: !!python/object/apply:builtins.getattr
      - !!python/object:typer.core.TyperOption
        name: strategy
        opts:
        - --strategy
        secondary_opts: []
        type: !!python/object:click.types.Choice
          choices:
          - ratio
          - partial-ratio
          - token-sort-ratio
          - token-set-ratio
          case_sensitive: true
        required: false
        callback: null
        nargs: 1
        multiple: false
        expose_value: true
        default: partial-ratio
        is_eager: false
        metavar: null
        envvar: null
        _custom_shell_complete: null
        prompt: null
        confirmation_prompt: false
        prompt_required: true
        hide_input: false
        hidden: false
        _flag_needs_value: false
        is_flag: false
        is_bool_flag: false
        flag_value: false
        count: false
        allow_from_autoenv: true
        help: The matching strategy to use. Strategies require different scoring thresholds.
          The default threshold is optimized for partial ratio.
        show_default: true
        show_choices: true
        show_envvar: true
        rich_help_panel: null
      - value_from_envvar
    score: 0
    short_help: ''
    usage: find <QUERY> [OPTIONS]
  - category: ''
    deprecated: false
    epilog: ''
    help: 'Initialize Harbor CLI configuration file.


      Runs the configuration wizard by default unless otherwise specified.'
    hidden: false
    name: init
    options_metavar: '[OPTIONS]'
    params:
    - allow_from_autoenv: true
      confirmation_prompt: false
      choices: null
      count: false
      default: null
      envvar: null
      expose_value: true
      flag_value: true
      help: Path to create config file.
      hidden: false
      human_readable_name: path
      is_argument: false
      is_eager: false
      is_bool_flag: false
      is_flag: false
      is_option: null
      max: null
      min: null
      metavar: <PATH>
      multiple: false
      name: path
      nargs: 1
      opts:
      - --path
      prompt: null
      prompt_required: true
      required: false
      secondary_opts: []
      show_choices: true
      show_default: true
      show_envvar: true
      type: path
      value_from_envvar: !!python/object/apply:builtins.getattr
      - !!python/object:typer.core.TyperOption
        name: path
        opts:
        - --path
        secondary_opts: []
        type: !!python/object:click.types.Path
          exists: false
          file_okay: true
          dir_okay: true
          readable: true
          writable: false
          executable: false
          resolve_path: false
          allow_dash: false
          type: null
          name: path
        required: false
        callback: null
        nargs: 1
        multiple: false
        expose_value: true
        default: null
        is_eager: false
        metavar: null
        envvar: null
        _custom_shell_complete: null
        prompt: null
        confirmation_prompt: false
        prompt_required: true
        hide_input: false
        hidden: false
        _flag_needs_value: false
        is_flag: false
        is_bool_flag: false
        flag_value: true
        count: false
        allow_from_autoenv: true
        help: Path to create config file.
        show_default: true
        show_choices: true
        show_envvar: true
        rich_help_panel: null
      - value_from_envvar
    - allow_from_autoenv: true
      confirmation_prompt: false
      choices: null
      count: false
      default: false
      envvar: null
      expose_value: true
      flag_value: true
      help: Overwrite existing config file.
      hidden: false
      human_readable_name: overwrite
      is_argument: false
      is_eager: false
      is_bool_flag: true
      is_flag: true
      is_option: null
      max: null
      min: null
      metavar: <OVERWRITE>
      multiple: false
      name: overwrite
      nargs: 1
      opts:
      - --overwrite
      prompt: null
      prompt_required: true
      required: false
      secondary_opts:
      - --no-overwrite
      show_choices: true
      show_default: true
      show_envvar: true
      type: boolean
      value_from_envvar: !!python/object/apply:builtins.getattr
      - !!python/object:typer.core.TyperOption
        name: overwrite
        opts:
        - --overwrite
        secondary_opts:
        - --no-overwrite
        type: *id003
        required: false
        callback: null
        nargs: 1
        multiple: false
        expose_value: true
        default: false
        is_eager: false
        metavar: null
        envvar: null
        _custom_shell_complete: null
        prompt: null
        confirmation_prompt: false
        prompt_required: true
        hide_input: false
        hidden: false
        _flag_needs_value: false
        is_flag: true
        is_bool_flag: true
        flag_value: true
        count: false
        allow_from_autoenv: true
        help: Overwrite existing config file.
        show_default: true
        show_choices: true
        show_envvar: true
        rich_help_panel: null
      - value_from_envvar
    - allow_from_autoenv: true
      confirmation_prompt: false
      choices: null
      count: false
      default: true
      envvar: null
      expose_value: true
      flag_value: false
      help: Run the configuration wizard after creating the config file.
      hidden: false
      human_readable_name: wizard
      is_argument: false
      is_eager: false
      is_bool_flag: true
      is_flag: true
      is_option: null
      max: null
      min: null
      metavar: <WIZARD>
      multiple: false
      name: wizard
      nargs: 1
      opts:
      - --wizard
      prompt: null
      prompt_required: true
      required: false
      secondary_opts:
      - --no-wizard
      show_choices: true
      show_default: true
      show_envvar: true
      type: boolean
      value_from_envvar: !!python/object/apply:builtins.getattr
      - !!python/object:typer.core.TyperOption
        name: wizard
        opts:
        - --wizard
        secondary_opts:
        - --no-wizard
        type: *id003
        required: false
        callback: null
        nargs: 1
        multiple: false
        expose_value: true
        default: true
        is_eager: false
        metavar: null
        envvar: null
        _custom_shell_complete: null
        prompt: null
        confirmation_prompt: false
        prompt_required: true
        hide_input: false
        hidden: false
        _flag_needs_value: false
        is_flag: true
        is_bool_flag: true
        flag_value: false
        count: false
        allow_from_autoenv: true
        help: Run the configuration wizard after creating the config file.
        show_default: true
        show_choices: true
        show_envvar: true
        rich_help_panel: null
      - value_from_envvar
    score: 0
    short_help: ''
    usage: init [OPTIONS]
  - category: ''
    deprecated: false
    epilog: ''
    help: Start an interactive REPL.
    hidden: false
    name: repl
    options_metavar: '[OPTIONS]'
    params:
    - allow_from_autoenv: true
      confirmation_prompt: false
      choices: null
      count: false
      default: null
      envvar: HARBOR_CLI_REPL_HISTORY
      expose_value: true
      flag_value: true
      help: Enable REPL history. Overrides config option [italic yellow]repl.history[/].
      hidden: false
      human_readable_name: repl_history
      is_argument: false
      is_eager: false
      is_bool_flag: true
      is_flag: true
      is_option: null
      max: null
      min: null
      metavar: <REPL_HISTORY>
      multiple: false
      name: repl_history
      nargs: 1
      opts:
      - --repl-history
      prompt: null
      prompt_required: true
      required: false
      secondary_opts:
      - --no-repl-history
      show_choices: true
      show_default: false
      show_envvar: false
      type: boolean
      value_from_envvar: !!python/object/apply:builtins.getattr
      - !!python/object:typer.core.TyperOption
        name: repl_history
        opts:
        - --repl-history
        secondary_opts:
        - --no-repl-history
        type: *id003
        required: false
        callback: null
        nargs: 1
        multiple: false
        expose_value: true
        default: null
        is_eager: false
        metavar: null
        envvar: HARBOR_CLI_REPL_HISTORY
        _custom_shell_complete: null
        prompt: null
        confirmation_prompt: false
        prompt_required: true
        hide_input: false
        hidden: false
        _flag_needs_value: false
        is_flag: true
        is_bool_flag: true
        flag_value: true
        count: false
        allow_from_autoenv: true
        help: Enable REPL history. Overrides config option [italic yellow]repl.history[/].
        show_default: false
        show_choices: true
        show_envvar: false
        rich_help_panel: null
      - value_from_envvar
    - allow_from_autoenv: true
      confirmation_prompt: false
      choices: null
      count: false
      default: null
      envvar: HARBOR_CLI_REPL_HISTORY_FILE
      expose_value: true
      flag_value: true
      help: 'Custom location of REPL history file (default: [bold magenta]''/home/runner/.local/share/harbor-cli/history''[/]).
        Overrides config option [italic yellow]repl.history_file[/].'
      hidden: false
      human_readable_name: repl_history_file
      is_argument: false
      is_eager: false
      is_bool_flag: false
      is_flag: false
      is_option: null
      max: null
      min: null
      metavar: <REPL_HISTORY_FILE>
      multiple: false
      name: repl_history_file
      nargs: 1
      opts:
      - --repl-history-file
      prompt: null
      prompt_required: true
      required: false
      secondary_opts: []
      show_choices: true
      show_default: false
      show_envvar: false
      type: path
      value_from_envvar: !!python/object/apply:builtins.getattr
      - !!python/object:typer.core.TyperOption
        name: repl_history_file
        opts:
        - --repl-history-file
        secondary_opts: []
        type: !!python/object:click.types.Path
          exists: false
          file_okay: true
          dir_okay: true
          readable: true
          writable: false
          executable: false
          resolve_path: false
          allow_dash: false
          type: null
          name: path
        required: false
        callback: null
        nargs: 1
        multiple: false
        expose_value: true
        default: null
        is_eager: false
        metavar: null
        envvar: HARBOR_CLI_REPL_HISTORY_FILE
        _custom_shell_complete: null
        prompt: null
        confirmation_prompt: false
        prompt_required: true
        hide_input: false
        hidden: false
        _flag_needs_value: false
        is_flag: false
        is_bool_flag: false
        flag_value: true
        count: false
        allow_from_autoenv: true
        help: 'Custom location of REPL history file (default: [bold magenta]''/home/runner/.local/share/harbor-cli/history''[/]).
          Overrides config option [italic yellow]repl.history_file[/].'
        show_default: false
        show_choices: true
        show_envvar: false
        rich_help_panel: null
      - value_from_envvar
    score: 0
    short_help: ''
    usage: repl [OPTIONS]
  - category: ''
    deprecated: false
    epilog: ''
    help: Print a sample config file to stdout.
    hidden: false
    name: sample-config
    options_metavar: '[OPTIONS]'
    params: []
    score: 0
    short_help: ''
    usage: sample-config
  - category: ''
    deprecated: false
    epilog: ''
    help: 'Search for projects and repositories.


      Provides the same functionality as the search bar in the header of Web UI.'
    hidden: false
    name: search
    options_metavar: '[OPTIONS]'
    params:
    - allow_from_autoenv: null
      confirmation_prompt: null
      choices: null
      count: null
      default: null
      envvar: null
      expose_value: true
      flag_value: null
      help: The search query.
      hidden: false
      human_readable_name: QUERY
      is_argument: true
      is_eager: false
      is_bool_flag: null
      is_flag: null
      is_option: null
      max: null
      min: null
      metavar: <QUERY>
      multiple: false
      name: query
      nargs: 1
      opts:
      - query
      prompt: null
      prompt_required: null
      required: true
      secondary_opts: []
      show_choices: true
      show_default: true
      show_envvar: true
      type: text
      value_from_envvar: !!python/object/apply:builtins.getattr
      - !!python/object:typer.core.TyperArgument
        help: The search query.
        show_default: true
        show_choices: true
        show_envvar: true
        hidden: false
        rich_help_panel: null
        name: query
        opts:
        - query
        secondary_opts: []
        type: *id001
        required: true
        callback: null
        nargs: 1
        multiple: false
        expose_value: true
        default: null
        is_eager: false
        metavar: null
        envvar: null
        _custom_shell_complete: null
      - value_from_envvar
    score: 0
    short_help: ''
    usage: search <QUERY>
  - category: ''
    deprecated: false
    epilog: ''
    help: Start a TUI (text-based user interface).
    hidden: false
    name: tui
    options_metavar: '[OPTIONS]'
    params: []
    score: 0
    short_help: ''
    usage: tui
config:
- category: config
  deprecated: false
  epilog: ''
  help: Fetch the current Harbor configuration.
  hidden: false
  name: config get
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: true
    envvar: null
    expose_value: true
    flag_value: false
    help: Flatten config response to a single level.
    hidden: false
    human_readable_name: flatten
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <FLATTEN>
    multiple: false
    name: flatten
    nargs: 1
    opts:
    - --flatten
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-flatten
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: flatten
      opts:
      - --flatten
      secondary_opts:
      - --no-flatten
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: true
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: Flatten config response to a single level.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: config get [OPTIONS]
- category: config
  deprecated: false
  epilog: ''
  help: 'Update the Harbor configuration.


    One or more configuration parameters must be provided.'
  hidden: false
  name: config update
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The auth mode of current system, such as "db_auth", "ldap_auth", "oidc_auth"
    hidden: false
    human_readable_name: auth_mode
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <AUTH_MODE>
    multiple: false
    name: auth_mode
    nargs: 1
    opts:
    - --auth-mode
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: auth_mode
      opts:
      - --auth-mode
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The auth mode of current system, such as "db_auth", "ldap_auth", "oidc_auth"
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: ''
    hidden: false
    human_readable_name: email_from
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <EMAIL_FROM>
    multiple: false
    name: email_from
    nargs: 1
    opts:
    - --email-from
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: email_from
      opts:
      - --email-from
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: null
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: ''
    hidden: false
    human_readable_name: email_host
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <EMAIL_HOST>
    multiple: false
    name: email_host
    nargs: 1
    opts:
    - --email-host
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: email_host
      opts:
      - --email-host
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: null
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: ''
    hidden: false
    human_readable_name: email_identity
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <EMAIL_IDENTITY>
    multiple: false
    name: email_identity
    nargs: 1
    opts:
    - --email-identity
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: email_identity
      opts:
      - --email-identity
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: null
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: ''
    hidden: false
    human_readable_name: email_insecure
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <EMAIL_INSECURE>
    multiple: false
    name: email_insecure
    nargs: 1
    opts:
    - --email-insecure
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: email_insecure
      opts:
      - --email-insecure
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: null
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: ''
    hidden: false
    human_readable_name: email_password
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <EMAIL_PASSWORD>
    multiple: false
    name: email_password
    nargs: 1
    opts:
    - --email-password
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: email_password
      opts:
      - --email-password
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: null
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: ''
    hidden: false
    human_readable_name: email_port
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <EMAIL_PORT>
    multiple: false
    name: email_port
    nargs: 1
    opts:
    - --email-port
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: email_port
      opts:
      - --email-port
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: null
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: ''
    hidden: false
    human_readable_name: email_ssl
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <EMAIL_SSL>
    multiple: false
    name: email_ssl
    nargs: 1
    opts:
    - --email-ssl
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: email_ssl
      opts:
      - --email-ssl
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: null
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: ''
    hidden: false
    human_readable_name: email_username
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <EMAIL_USERNAME>
    multiple: false
    name: email_username
    nargs: 1
    opts:
    - --email-username
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: email_username
      opts:
      - --email-username
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: null
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The Base DN for LDAP binding.
    hidden: false
    human_readable_name: ldap_base_dn
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_BASE_DN>
    multiple: false
    name: ldap_base_dn
    nargs: 1
    opts:
    - --ldap-base-dn
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_base_dn
      opts:
      - --ldap-base-dn
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The Base DN for LDAP binding.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The filter for LDAP search
    hidden: false
    human_readable_name: ldap_filter
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_FILTER>
    multiple: false
    name: ldap_filter
    nargs: 1
    opts:
    - --ldap-filter
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_filter
      opts:
      - --ldap-filter
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The filter for LDAP search
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The base DN to search LDAP group.
    hidden: false
    human_readable_name: ldap_group_base_dn
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_GROUP_BASE_DN>
    multiple: false
    name: ldap_group_base_dn
    nargs: 1
    opts:
    - --ldap-group-base-dn
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_group_base_dn
      opts:
      - --ldap-group-base-dn
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The base DN to search LDAP group.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Specify the ldap group which have the same privilege with Harbor admin
    hidden: false
    human_readable_name: ldap_group_admin_dn
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_GROUP_ADMIN_DN>
    multiple: false
    name: ldap_group_admin_dn
    nargs: 1
    opts:
    - --ldap-group-admin-dn
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_group_admin_dn
      opts:
      - --ldap-group-admin-dn
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Specify the ldap group which have the same privilege with Harbor admin
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The attribute which is used as identity of the LDAP group, default is cn.'
    hidden: false
    human_readable_name: ldap_group_attribute_name
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_GROUP_ATTRIBUTE_NAME>
    multiple: false
    name: ldap_group_attribute_name
    nargs: 1
    opts:
    - --ldap-group-attribute-name
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_group_attribute_name
      opts:
      - --ldap-group-attribute-name
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The attribute which is used as identity of the LDAP group, default is
        cn.'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The filter to search the ldap group
    hidden: false
    human_readable_name: ldap_group_search_filter
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_GROUP_SEARCH_FILTER>
    multiple: false
    name: ldap_group_search_filter
    nargs: 1
    opts:
    - --ldap-group-search-filter
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_group_search_filter
      opts:
      - --ldap-group-search-filter
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The filter to search the ldap group
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The scope to search ldap group. ''0-LDAP_SCOPE_BASE, 1-LDAP_SCOPE_ONELEVEL,
      2-LDAP_SCOPE_SUBTREE''
    hidden: false
    human_readable_name: ldap_group_search_scope
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_GROUP_SEARCH_SCOPE>
    multiple: false
    name: ldap_group_search_scope
    nargs: 1
    opts:
    - --ldap-group-search-scope
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_group_search_scope
      opts:
      - --ldap-group-search-scope
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The scope to search ldap group. ''0-LDAP_SCOPE_BASE, 1-LDAP_SCOPE_ONELEVEL,
        2-LDAP_SCOPE_SUBTREE''
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The scope to search ldap users,'0-LDAP_SCOPE_BASE, 1-LDAP_SCOPE_ONELEVEL,
      2-LDAP_SCOPE_SUBTREE'
    hidden: false
    human_readable_name: ldap_scope
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_SCOPE>
    multiple: false
    name: ldap_scope
    nargs: 1
    opts:
    - --ldap-scope
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_scope
      opts:
      - --ldap-scope
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The scope to search ldap users,'0-LDAP_SCOPE_BASE, 1-LDAP_SCOPE_ONELEVEL,
        2-LDAP_SCOPE_SUBTREE'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The DN of the user to do the search.
    hidden: false
    human_readable_name: ldap_search_dn
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_SEARCH_DN>
    multiple: false
    name: ldap_search_dn
    nargs: 1
    opts:
    - --ldap-search-dn
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_search_dn
      opts:
      - --ldap-search-dn
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The DN of the user to do the search.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The password of the ldap search dn
    hidden: false
    human_readable_name: ldap_search_password
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_SEARCH_PASSWORD>
    multiple: false
    name: ldap_search_password
    nargs: 1
    opts:
    - --ldap-search-password
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_search_password
      opts:
      - --ldap-search-password
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The password of the ldap search dn
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Timeout in seconds for connection to LDAP server
    hidden: false
    human_readable_name: ldap_timeout
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_TIMEOUT>
    multiple: false
    name: ldap_timeout
    nargs: 1
    opts:
    - --ldap-timeout
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_timeout
      opts:
      - --ldap-timeout
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Timeout in seconds for connection to LDAP server
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The attribute which is used as identity for the LDAP binding, such as "CN"
      or "SAMAccountname"
    hidden: false
    human_readable_name: ldap_uid
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_UID>
    multiple: false
    name: ldap_uid
    nargs: 1
    opts:
    - --ldap-uid
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_uid
      opts:
      - --ldap-uid
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The attribute which is used as identity for the LDAP binding, such as
        "CN" or "SAMAccountname"
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The URL of LDAP server
    hidden: false
    human_readable_name: ldap_url
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_URL>
    multiple: false
    name: ldap_url
    nargs: 1
    opts:
    - --ldap-url
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_url
      opts:
      - --ldap-url
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The URL of LDAP server
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Whether verify your OIDC server certificate, disable it if your OIDC server
      is hosted via self-hosted certificate.
    hidden: false
    human_readable_name: ldap_verify_cert
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_VERIFY_CERT>
    multiple: false
    name: ldap_verify_cert
    nargs: 1
    opts:
    - --ldap-verify-cert
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_verify_cert
      opts:
      - --ldap-verify-cert
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Whether verify your OIDC server certificate, disable it if your OIDC server
        is hosted via self-hosted certificate.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The user attribute to identify the group membership
    hidden: false
    human_readable_name: ldap_group_membership_attribute
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_GROUP_MEMBERSHIP_ATTRIBUTE>
    multiple: false
    name: ldap_group_membership_attribute
    nargs: 1
    opts:
    - --ldap-group-membership-attribute
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_group_membership_attribute
      opts:
      - --ldap-group-membership-attribute
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The user attribute to identify the group membership
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Indicate who can create projects, it could be ''adminonly'' or ''everyone''.
    hidden: false
    human_readable_name: project_creation_restriction
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_CREATION_RESTRICTION>
    multiple: false
    name: project_creation_restriction
    nargs: 1
    opts:
    - --project-creation-restriction
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: project_creation_restriction
      opts:
      - --project-creation-restriction
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Indicate who can create projects, it could be ''adminonly'' or ''everyone''.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The flag to indicate whether Harbor is in readonly mode.
    hidden: false
    human_readable_name: read_only
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <READ_ONLY>
    multiple: false
    name: read_only
    nargs: 1
    opts:
    - --read-only
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: read_only
      opts:
      - --read-only
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The flag to indicate whether Harbor is in readonly mode.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Whether the Harbor instance supports self-registration.  If it''s set to
      false, admin need to add user to the instance.
    hidden: false
    human_readable_name: self_registration
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SELF_REGISTRATION>
    multiple: false
    name: self_registration
    nargs: 1
    opts:
    - --self-registration
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: self_registration
      opts:
      - --self-registration
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Whether the Harbor instance supports self-registration.  If it''s set
        to false, admin need to add user to the instance.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The expiration time of the token for internal Registry, in minutes.
    hidden: false
    human_readable_name: token_expiration
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <TOKEN_EXPIRATION>
    multiple: false
    name: token_expiration
    nargs: 1
    opts:
    - --token-expiration
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: token_expiration
      opts:
      - --token-expiration
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The expiration time of the token for internal Registry, in minutes.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The client id of UAA
    hidden: false
    human_readable_name: uaa_client_id
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <UAA_CLIENT_ID>
    multiple: false
    name: uaa_client_id
    nargs: 1
    opts:
    - --uaa-client-id
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: uaa_client_id
      opts:
      - --uaa-client-id
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The client id of UAA
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The client secret of the UAA
    hidden: false
    human_readable_name: uaa_client_secret
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <UAA_CLIENT_SECRET>
    multiple: false
    name: uaa_client_secret
    nargs: 1
    opts:
    - --ua
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: uaa_client_secret
      opts:
      - --ua
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The client secret of the UAA
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The endpoint of the UAA
    hidden: false
    human_readable_name: uaa_endpoint
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <UAA_ENDPOINT>
    multiple: false
    name: uaa_endpoint
    nargs: 1
    opts:
    - --uaa-endpoint
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: uaa_endpoint
      opts:
      - --uaa-endpoint
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The endpoint of the UAA
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Verify the certificate in UAA server
    hidden: false
    human_readable_name: uaa_verify_cert
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <UAA_VERIFY_CERT>
    multiple: false
    name: uaa_verify_cert
    nargs: 1
    opts:
    - --uaa-verify-cert
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: uaa_verify_cert
      opts:
      - --uaa-verify-cert
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Verify the certificate in UAA server
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The endpoint of the HTTP auth
    hidden: false
    human_readable_name: http_authproxy_endpoint
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <HTTP_AUTHPROXY_ENDPOINT>
    multiple: false
    name: http_authproxy_endpoint
    nargs: 1
    opts:
    - --http-authproxy-endpoint
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: http_authproxy_endpoint
      opts:
      - --http-authproxy-endpoint
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The endpoint of the HTTP auth
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The token review endpoint
    hidden: false
    human_readable_name: http_authproxy_tokenreview_endpoint
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <HTTP_AUTHPROXY_TOKENREVIEW_ENDPOINT>
    multiple: false
    name: http_authproxy_tokenreview_endpoint
    nargs: 1
    opts:
    - --http-authproxy-tokenreview-endpoint
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: http_authproxy_tokenreview_endpoint
      opts:
      - --http-authproxy-tokenreview-endpoint
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The token review endpoint
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The group which has the harbor admin privileges
    hidden: false
    human_readable_name: http_authproxy_admin_groups
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <HTTP_AUTHPROXY_ADMIN_GROUPS>
    multiple: false
    name: http_authproxy_admin_groups
    nargs: 1
    opts:
    - --http-authproxy-admin-groups
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: http_authproxy_admin_groups
      opts:
      - --http-authproxy-admin-groups
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The group which has the harbor admin privileges
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'The username of the user with admin privileges. NOTE: ONLY ACCEPTS A SINGLE
      USERNAME DESPITE NAMING SCHEME IMPLYING OTHERWISE! '
    hidden: false
    human_readable_name: http_authproxy_admin_usernames
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <HTTP_AUTHPROXY_ADMIN_USERNAMES>
    multiple: false
    name: http_authproxy_admin_usernames
    nargs: 1
    opts:
    - --http-authproxy-admin-usernames
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: http_authproxy_admin_usernames
      opts:
      - --http-authproxy-admin-usernames
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'The username of the user with admin privileges. NOTE: ONLY ACCEPTS A
        SINGLE USERNAME DESPITE NAMING SCHEME IMPLYING OTHERWISE! '
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Verify the HTTP auth provider's certificate
    hidden: false
    human_readable_name: http_authproxy_verify_cert
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <HTTP_AUTHPROXY_VERIFY_CERT>
    multiple: false
    name: http_authproxy_verify_cert
    nargs: 1
    opts:
    - --http-authproxy-verify-cert
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: http_authproxy_verify_cert
      opts:
      - --http-authproxy-verify-cert
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Verify the HTTP auth provider's certificate
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Search user before onboard
    hidden: false
    human_readable_name: http_authproxy_skip_search
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <HTTP_AUTHPROXY_SKIP_SEARCH>
    multiple: false
    name: http_authproxy_skip_search
    nargs: 1
    opts:
    - --http-authproxy-skip-search
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: http_authproxy_skip_search
      opts:
      - --http-authproxy-skip-search
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Search user before onboard
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The certificate of the HTTP auth provider
    hidden: false
    human_readable_name: http_authproxy_server_certificate
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <HTTP_AUTHPROXY_SERVER_CERTIFICATE>
    multiple: false
    name: http_authproxy_server_certificate
    nargs: 1
    opts:
    - --http-authproxy-server-certificate
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: http_authproxy_server_certificate
      opts:
      - --http-authproxy-server-certificate
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The certificate of the HTTP auth provider
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The OIDC provider name
    hidden: false
    human_readable_name: oidc_name
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <OIDC_NAME>
    multiple: false
    name: oidc_name
    nargs: 1
    opts:
    - --oidc-name
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: oidc_name
      opts:
      - --oidc-name
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The OIDC provider name
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The endpoint of the OIDC provider
    hidden: false
    human_readable_name: oidc_endpoint
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <OIDC_ENDPOINT>
    multiple: false
    name: oidc_endpoint
    nargs: 1
    opts:
    - --oidc-endpoint
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: oidc_endpoint
      opts:
      - --oidc-endpoint
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The endpoint of the OIDC provider
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The client ID of the OIDC provider
    hidden: false
    human_readable_name: oidc_client_id
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <OIDC_CLIENT_ID>
    multiple: false
    name: oidc_client_id
    nargs: 1
    opts:
    - --oidc-client-id
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: oidc_client_id
      opts:
      - --oidc-client-id
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The client ID of the OIDC provider
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The OIDC provider secret
    hidden: false
    human_readable_name: oidc_client_secret
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <OIDC_CLIENT_SECRET>
    multiple: false
    name: oidc_client_secret
    nargs: 1
    opts:
    - --oidc-client-secret
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: oidc_client_secret
      opts:
      - --oidc-client-secret
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The OIDC provider secret
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The attribute claims the group name
    hidden: false
    human_readable_name: oidc_groups_claim
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <OIDC_GROUPS_CLAIM>
    multiple: false
    name: oidc_groups_claim
    nargs: 1
    opts:
    - --oidc-groups-claim
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: oidc_groups_claim
      opts:
      - --oidc-groups-claim
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The attribute claims the group name
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The OIDC group which has the harbor admin privileges
    hidden: false
    human_readable_name: oidc_admin_group
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <OIDC_ADMIN_GROUP>
    multiple: false
    name: oidc_admin_group
    nargs: 1
    opts:
    - --oidc-admin-group
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: oidc_admin_group
      opts:
      - --oidc-admin-group
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The OIDC group which has the harbor admin privileges
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The scope of the OIDC provider
    hidden: false
    human_readable_name: oidc_scope
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <OIDC_SCOPE>
    multiple: false
    name: oidc_scope
    nargs: 1
    opts:
    - --oidc-scope
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: oidc_scope
      opts:
      - --oidc-scope
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The scope of the OIDC provider
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The attribute claims the username
    hidden: false
    human_readable_name: oidc_user_claim
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <OIDC_USER_CLAIM>
    multiple: false
    name: oidc_user_claim
    nargs: 1
    opts:
    - --oidc-user-claim
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: oidc_user_claim
      opts:
      - --oidc-user-claim
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The attribute claims the username
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Verify the OIDC provider's certificate'
    hidden: false
    human_readable_name: oidc_verify_cert
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <OIDC_VERIFY_CERT>
    multiple: false
    name: oidc_verify_cert
    nargs: 1
    opts:
    - --oidc-verify-cert
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: oidc_verify_cert
      opts:
      - --oidc-verify-cert
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Verify the OIDC provider's certificate'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Auto onboard the OIDC user
    hidden: false
    human_readable_name: oidc_auto_onboard
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <OIDC_AUTO_ONBOARD>
    multiple: false
    name: oidc_auto_onboard
    nargs: 1
    opts:
    - --oidc-auto-onboard
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: oidc_auto_onboard
      opts:
      - --oidc-auto-onboard
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Auto onboard the OIDC user
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'Extra parameters to add when redirect request to OIDC provider. WARNING:
      ''parms'' not ''parAms'', due to Harbor spelling parity (blame them).'
    hidden: false
    human_readable_name: oidc_extra_redirect_parms
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <OIDC_EXTRA_REDIRECT_PARMS>
    multiple: false
    name: oidc_extra_redirect_parms
    nargs: 1
    opts:
    - --oidc-extra-redirect-parms
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: oidc_extra_redirect_parms
      opts:
      - --oidc-extra-redirect-parms
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'Extra parameters to add when redirect request to OIDC provider. WARNING:
        ''parms'' not ''parAms'', due to Harbor spelling parity (blame them).'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The robot account token duration in days
    hidden: false
    human_readable_name: robot_token_duration
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <ROBOT_TOKEN_DURATION>
    multiple: false
    name: robot_token_duration
    nargs: 1
    opts:
    - --robot-token-duration
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: robot_token_duration
      opts:
      - --robot-token-duration
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The robot account token duration in days
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The rebot account name prefix
    hidden: false
    human_readable_name: robot_name_prefix
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <ROBOT_NAME_PREFIX>
    multiple: false
    name: robot_name_prefix
    nargs: 1
    opts:
    - --robot-name-prefix
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: robot_name_prefix
      opts:
      - --robot-name-prefix
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The rebot account name prefix
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Enable notification
    hidden: false
    human_readable_name: notification_enable
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <NOTIFICATION_ENABLE>
    multiple: false
    name: notification_enable
    nargs: 1
    opts:
    - --notifications
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: notification_enable
      opts:
      - --notifications
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Enable notification
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Enable quota per project
    hidden: false
    human_readable_name: quota_per_project_enable
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <QUOTA_PER_PROJECT_ENABLE>
    multiple: false
    name: quota_per_project_enable
    nargs: 1
    opts:
    - --quota-per-project
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: quota_per_project_enable
      opts:
      - --quota-per-project
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Enable quota per project
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The storage quota per project
    hidden: false
    human_readable_name: storage_per_project
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <STORAGE_PER_PROJECT>
    multiple: false
    name: storage_per_project
    nargs: 1
    opts:
    - --storage-per-project
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: storage_per_project
      opts:
      - --storage-per-project
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The storage quota per project
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The audit log forward endpoint
    hidden: false
    human_readable_name: audit_log_forward_endpoint
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <AUDIT_LOG_FORWARD_ENDPOINT>
    multiple: false
    name: audit_log_forward_endpoint
    nargs: 1
    opts:
    - --audit-log-forward-endpoint
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: audit_log_forward_endpoint
      opts:
      - --audit-log-forward-endpoint
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The audit log forward endpoint
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Skip audit log database
    hidden: false
    human_readable_name: skip_audit_log_database
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SKIP_AUDIT_LOG_DATABASE>
    multiple: false
    name: skip_audit_log_database
    nargs: 1
    opts:
    - --skip-audit-log-database
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: skip_audit_log_database
      opts:
      - --skip-audit-log-database
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Skip audit log database
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: config update [OPTIONS]
cve-allowlist:
- category: cve-allowlist
  deprecated: false
  epilog: ''
  help: Clear the current CVE allowlist of all CVEs, and optionally all metadata as
    well.
  hidden: false
  name: cve-allowlist clear
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Also clear the allowlist of all metadata (such as project ID, expiration,
      etc).
    hidden: false
    human_readable_name: full_clear
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <FULL_CLEAR>
    multiple: false
    name: full_clear
    nargs: 1
    opts:
    - --full
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: full_clear
      opts:
      - --full
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Also clear the allowlist of all metadata (such as project ID, expiration,
        etc).
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: cve-allowlist clear [OPTIONS]
- category: cve-allowlist
  deprecated: false
  epilog: ''
  help: Get the current CVE allowlist.
  hidden: false
  name: cve-allowlist get
  options_metavar: '[OPTIONS]'
  params: []
  score: 0
  short_help: ''
  usage: cve-allowlist get
- category: cve-allowlist
  deprecated: false
  epilog: ''
  help: Add/remove CVE IDs to the CVE allowlist.
  hidden: false
  name: cve-allowlist update
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: []
    envvar: null
    expose_value: true
    flag_value: true
    help: CVE IDs to add/remove. Can be a comma-separated list, or specified multiple
      times.
    hidden: false
    human_readable_name: cves
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <CVES,[CVES...]>
    multiple: true
    name: cves
    nargs: 1
    opts:
    - --cve
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: cves
      opts:
      - --cve
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: 1
      multiple: true
      expose_value: true
      default: []
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: CVE IDs to add/remove. Can be a comma-separated list, or specified multiple
        times.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Remove the given CVE IDs from the allowlist instead of adding them.
    hidden: false
    human_readable_name: remove
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <REMOVE>
    multiple: false
    name: remove
    nargs: 1
    opts:
    - --remove
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: remove
      opts:
      - --remove
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Remove the given CVE IDs from the allowlist instead of adding them.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: cve-allowlist update [OPTIONS]
gc:
- category: gc
  deprecated: false
  epilog: ''
  help: Get garbage collection job by its ID.
  hidden: false
  name: gc job
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The ID of the Garbage Collection job to fetch.
    hidden: false
    human_readable_name: JOB_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <JOB_ID>
    multiple: false
    name: job_id
    nargs: 1
    opts:
    - job_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The ID of the Garbage Collection job to fetch.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: job_id
      opts:
      - job_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: gc job <JOB_ID>
- category: gc
  deprecated: false
  epilog: ''
  help: Get garbage collection jobs.
  hidden: false
  name: gc jobs
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Query parameters to filter the results.
    hidden: false
    human_readable_name: query
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <QUERY>
    multiple: false
    name: query
    nargs: 1
    opts:
    - --query
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: query
      opts:
      - --query
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Query parameters to filter the results.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort by
      name ascending and id descending.'
    hidden: false
    human_readable_name: sort
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SORT>
    multiple: false
    name: sort
    nargs: 1
    opts:
    - --sort
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: sort
      opts:
      - --sort
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort
        by name ascending and id descending.'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 1
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Page to begin fetching from.
    hidden: false
    human_readable_name: page
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE>
    multiple: false
    name: page
    nargs: 1
    opts:
    - --page
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page
      opts:
      - --page
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Page to begin fetching from.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Results to fetch per API call.
    hidden: false
    human_readable_name: page_size
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE_SIZE>
    multiple: false
    name: page_size
    nargs: 1
    opts:
    - --page-size
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page_size
      opts:
      - --page-size
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Results to fetch per API call.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Maximum number of results to fetch.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LIMIT>
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: limit
      opts:
      - --limit
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Maximum number of results to fetch.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: gc jobs [OPTIONS]
- category: gc
  deprecated: false
  epilog: ''
  help: Get garbage collection job by its ID.
  hidden: false
  name: gc log
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The ID of the Garbage Collection job to fetch logs for.
    hidden: false
    human_readable_name: JOB_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <JOB_ID>
    multiple: false
    name: job_id
    nargs: 1
    opts:
    - job_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The ID of the Garbage Collection job to fetch logs for.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: job_id
      opts:
      - job_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: gc log <JOB_ID>
gc schedule:
- category: gc schedule
  deprecated: false
  epilog: ''
  help: Create a new Garbage Collection schedule.
  hidden: false
  name: gc schedule create
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices:
    - Hourly
    - Daily
    - Weekly
    - Custom
    - Manual
    - None
    - Schedule
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'The schedule type. The valid values are ''Hourly'', ''Daily'', ''Weekly'',
      ''Custom'', ''Manual'', ''None'' and ''Schedule''.

      ''Manual'' means to trigger it right away, ''Schedule'' means to trigger it
      by a specified cron schedule and

      ''None'' means to cancel the schedule.'
    hidden: false
    human_readable_name: type
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <TYPE>
    multiple: false
    name: type
    nargs: 1
    opts:
    - --type
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: type
      opts:
      - --type
      secondary_opts: []
      type: !!python/object:click.types.Choice
        choices:
        - Hourly
        - Daily
        - Weekly
        - Custom
        - Manual
        - None
        - Schedule
        case_sensitive: true
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'The schedule type. The valid values are ''Hourly'', ''Daily'', ''Weekly'',
        ''Custom'', ''Manual'', ''None'' and ''Schedule''.

        ''Manual'' means to trigger it right away, ''Schedule'' means to trigger it
        by a specified cron schedule and

        ''None'' means to cancel the schedule.'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: A cron expression, a time-based job scheduler.
    hidden: false
    human_readable_name: cron
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <CRON>
    multiple: false
    name: cron
    nargs: 1
    opts:
    - --cron
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: cron
      opts:
      - --cron
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: A cron expression, a time-based job scheduler.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: gc schedule create [OPTIONS]
- category: gc schedule
  deprecated: false
  epilog: ''
  help: Get garbage collection schedule.
  hidden: false
  name: gc schedule get
  options_metavar: '[OPTIONS]'
  params: []
  score: 0
  short_help: ''
  usage: gc schedule get
- category: gc schedule
  deprecated: false
  epilog: ''
  help: ''
  hidden: false
  name: gc schedule update
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices:
    - Hourly
    - Daily
    - Weekly
    - Custom
    - Manual
    - None
    - Schedule
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'The schedule type. The valid values are ''Hourly'', ''Daily'', ''Weekly'',
      ''Custom'', ''Manual'', ''None'' and ''Schedule''.

      ''Manual'' means to trigger it right away, ''Schedule'' means to trigger it
      by a specified cron schedule and

      ''None'' means to cancel the schedule.'
    hidden: false
    human_readable_name: type
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <TYPE>
    multiple: false
    name: type
    nargs: 1
    opts:
    - --type
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: type
      opts:
      - --type
      secondary_opts: []
      type: !!python/object:click.types.Choice
        choices:
        - Hourly
        - Daily
        - Weekly
        - Custom
        - Manual
        - None
        - Schedule
        case_sensitive: true
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'The schedule type. The valid values are ''Hourly'', ''Daily'', ''Weekly'',
        ''Custom'', ''Manual'', ''None'' and ''Schedule''.

        ''Manual'' means to trigger it right away, ''Schedule'' means to trigger it
        by a specified cron schedule and

        ''None'' means to cancel the schedule.'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: A cron expression, a time-based job scheduler.
    hidden: false
    human_readable_name: cron
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <CRON>
    multiple: false
    name: cron
    nargs: 1
    opts:
    - --cron
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: cron
      opts:
      - --cron
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: A cron expression, a time-based job scheduler.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: gc schedule update [OPTIONS]
ldap:
- category: ldap
  deprecated: false
  epilog: ''
  help: Ping LDAP service. Uses default configuration if none is provided.
  hidden: false
  name: ldap ping
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The url of ldap service.
    hidden: false
    human_readable_name: ldap_url
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_URL>
    multiple: false
    name: ldap_url
    nargs: 1
    opts:
    - --url
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_url
      opts:
      - --url
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The url of ldap service.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The search dn of ldap service.
    hidden: false
    human_readable_name: ldap_search_dn
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_SEARCH_DN>
    multiple: false
    name: ldap_search_dn
    nargs: 1
    opts:
    - --search-dn
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_search_dn
      opts:
      - --search-dn
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The search dn of ldap service.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The search password of ldap service.
    hidden: false
    human_readable_name: ldap_search_password
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_SEARCH_PASSWORD>
    multiple: false
    name: ldap_search_password
    nargs: 1
    opts:
    - --search-password
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_search_password
      opts:
      - --search-password
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The search password of ldap service.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The base dn of ldap service.
    hidden: false
    human_readable_name: ldap_base_dn
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_BASE_DN>
    multiple: false
    name: ldap_base_dn
    nargs: 1
    opts:
    - --base-dn
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_base_dn
      opts:
      - --base-dn
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The base dn of ldap service.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The serach filter of ldap service.
    hidden: false
    human_readable_name: ldap_filter
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_FILTER>
    multiple: false
    name: ldap_filter
    nargs: 1
    opts:
    - --filter
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_filter
      opts:
      - --filter
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The serach filter of ldap service.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The serach uid from ldap service attributes.
    hidden: false
    human_readable_name: ldap_uid
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_UID>
    multiple: false
    name: ldap_uid
    nargs: 1
    opts:
    - --uid
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_uid
      opts:
      - --uid
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The serach uid from ldap service attributes.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The serach scope of ldap service.
    hidden: false
    human_readable_name: ldap_scope
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_SCOPE>
    multiple: false
    name: ldap_scope
    nargs: 1
    opts:
    - --scope
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_scope
      opts:
      - --scope
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The serach scope of ldap service.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The connect timeout of ldap service(second).
    hidden: false
    human_readable_name: ldap_connection_timeout
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_CONNECTION_TIMEOUT>
    multiple: false
    name: ldap_connection_timeout
    nargs: 1
    opts:
    - --timeout
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_connection_timeout
      opts:
      - --timeout
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The connect timeout of ldap service(second).
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Verify Ldap server certificate.
    hidden: false
    human_readable_name: ldap_verify_cert
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <LDAP_VERIFY_CERT>
    multiple: false
    name: ldap_verify_cert
    nargs: 1
    opts:
    - --verify-cert
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_verify_cert
      opts:
      - --verify-cert
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Verify Ldap server certificate.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: ldap ping [OPTIONS]
ldap search:
- category: ldap search
  deprecated: false
  epilog: ''
  help: Search for groups in LDAP.
  hidden: false
  name: ldap search groups
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Group name to search for
    hidden: false
    human_readable_name: group_name
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <GROUP_NAME>
    multiple: false
    name: group_name
    nargs: 1
    opts:
    - --group-name
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: group_name
      opts:
      - --group-name
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Group name to search for
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Group DN to search for
    hidden: false
    human_readable_name: group_dn
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <GROUP_DN>
    multiple: false
    name: group_dn
    nargs: 1
    opts:
    - --group-dn
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: group_dn
      opts:
      - --group-dn
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Group DN to search for
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: ldap search groups [OPTIONS]
- category: ldap search
  deprecated: false
  epilog: ''
  help: Search for users in LDAP.
  hidden: false
  name: ldap search users
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Username to search for
    hidden: false
    human_readable_name: USERNAME
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <USERNAME>
    multiple: false
    name: username
    nargs: 1
    opts:
    - username
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Username to search for
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: username
      opts:
      - username
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: ldap search users <USERNAME>
project:
- category: project
  deprecated: false
  epilog: ''
  help: Create a new project.
  hidden: false
  name: project create
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The name of the project.
    hidden: false
    human_readable_name: PROJECT_NAME
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME>
    multiple: false
    name: project_name
    nargs: 1
    opts:
    - project_name
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The name of the project.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name
      opts:
      - project_name
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The storage quota of the project.
    hidden: false
    human_readable_name: storage_limit
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <STORAGE_LIMIT>
    multiple: false
    name: storage_limit
    nargs: 1
    opts:
    - --storage-limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: storage_limit
      opts:
      - --storage-limit
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The storage quota of the project.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The ID of referenced registry when creating the proxy cache project
    hidden: false
    human_readable_name: registry_id
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <REGISTRY_ID>
    multiple: false
    name: registry_id
    nargs: 1
    opts:
    - --registry-id
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: registry_id
      opts:
      - --registry-id
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The ID of referenced registry when creating the proxy cache project
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The public status of the project.
    hidden: false
    human_readable_name: public
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PUBLIC>
    multiple: false
    name: public
    nargs: 1
    opts:
    - --public
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: public
      opts:
      - --public
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The public status of the project.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Whether content trust is enabled or not. If it is enabled, user can't pull
      unsigned images from this project.
    hidden: false
    human_readable_name: enable_content_trust
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <ENABLE_CONTENT_TRUST>
    multiple: false
    name: enable_content_trust
    nargs: 1
    opts:
    - --content-trust
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: enable_content_trust
      opts:
      - --content-trust
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Whether content trust is enabled or not. If it is enabled, user can't
        pull unsigned images from this project.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Whether cosign content trust is enabled or not. If it is enabled, user can't
      pull images without cosign signature from this project.
    hidden: false
    human_readable_name: enable_content_trust_cosign
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <ENABLE_CONTENT_TRUST_COSIGN>
    multiple: false
    name: enable_content_trust_cosign
    nargs: 1
    opts:
    - --content-trust-cosign
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: enable_content_trust_cosign
      opts:
      - --content-trust-cosign
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Whether cosign content trust is enabled or not. If it is enabled, user
        can't pull images without cosign signature from this project.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Whether prevent the vulnerable images from running.
    hidden: false
    human_readable_name: prevent_vul
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PREVENT_VUL>
    multiple: false
    name: prevent_vul
    nargs: 1
    opts:
    - --prevent-vul
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: prevent_vul
      opts:
      - --prevent-vul
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Whether prevent the vulnerable images from running.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: If the vulnerability is high than severity defined here, the images can't
      be pulled. The valid values are "none", "low", "medium", "high", "critical".
    hidden: false
    human_readable_name: severity
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SEVERITY>
    multiple: false
    name: severity
    nargs: 1
    opts:
    - --severity
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: severity
      opts:
      - --severity
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: If the vulnerability is high than severity defined here, the images can't
        be pulled. The valid values are "none", "low", "medium", "high", "critical".
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Whether scan images automatically when pushing.
    hidden: false
    human_readable_name: auto_scan
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <AUTO_SCAN>
    multiple: false
    name: auto_scan
    nargs: 1
    opts:
    - --auto-scan
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: auto_scan
      opts:
      - --auto-scan
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Whether scan images automatically when pushing.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Whether this project reuse the system level CVE allowlist as the allowlist
      of its own.   If it is set to "true" the actual allowlist associate with this
      project, if any, will be ignored.
    hidden: false
    human_readable_name: reuse_sys_cve_allowlist
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <REUSE_SYS_CVE_ALLOWLIST>
    multiple: false
    name: reuse_sys_cve_allowlist
    nargs: 1
    opts:
    - --reuse-sys-cve-allowlist
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: reuse_sys_cve_allowlist
      opts:
      - --reuse-sys-cve-allowlist
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Whether this project reuse the system level CVE allowlist as the allowlist
        of its own.   If it is set to "true" the actual allowlist associate with this
        project, if any, will be ignored.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The ID of the tag retention policy for the project
    hidden: false
    human_readable_name: retention_id
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <RETENTION_ID>
    multiple: false
    name: retention_id
    nargs: 1
    opts:
    - --retention-id
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: retention_id
      opts:
      - --retention-id
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The ID of the tag retention policy for the project
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Whether generating SBOM automatically when pushing a subject artifact.
    hidden: false
    human_readable_name: auto_sbom_generation
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <AUTO_SBOM_GENERATION>
    multiple: false
    name: auto_sbom_generation
    nargs: 1
    opts:
    - --sbom-generation
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: auto_sbom_generation
      opts:
      - --sbom-generation
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Whether generating SBOM automatically when pushing a subject artifact.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: project create <PROJECT_NAME> [OPTIONS]
- category: project
  deprecated: false
  epilog: ''
  help: Delete a project.
  hidden: false
  name: project delete
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Force deletion without confirmation.
    hidden: false
    human_readable_name: force
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <FORCE>
    multiple: false
    name: force
    nargs: 1
    opts:
    - --force
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: force
      opts:
      - --force
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Force deletion without confirmation.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: project delete <PROJECT_NAME_OR_ID> [OPTIONS]
- category: project
  deprecated: false
  epilog: ''
  help: Check if a project with the given name exists.
  hidden: false
  name: project exists
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Project name to check existence of.
    hidden: false
    human_readable_name: PROJECT_NAME
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME>
    multiple: false
    name: project_name
    nargs: 1
    opts:
    - project_name
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Project name to check existence of.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name
      opts:
      - project_name
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: project exists <PROJECT_NAME>
- category: project
  deprecated: false
  epilog: ''
  help: Get information about a project.
  hidden: false
  name: project get
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: project get <PROJECT_NAME_OR_ID>
- category: project
  deprecated: false
  epilog: ''
  help: Fetch projects.
  hidden: false
  name: project list
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Query parameters to filter the results.
    hidden: false
    human_readable_name: query
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <QUERY>
    multiple: false
    name: query
    nargs: 1
    opts:
    - --query
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: query
      opts:
      - --query
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Query parameters to filter the results.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: name
    envvar: null
    expose_value: true
    flag_value: false
    help: 'Sort projects by the given field(s). Sortable fields: [bold magenta]''name''[/],
      [bold magenta]''project_id''[/], [bold magenta]''creation_time''[/]'
    hidden: false
    human_readable_name: sort
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SORT>
    multiple: false
    name: sort
    nargs: 1
    opts:
    - --sort
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: sort
      opts:
      - --sort
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: name
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: 'Sort projects by the given field(s). Sortable fields: [bold magenta]''name''[/],
        [bold magenta]''project_id''[/], [bold magenta]''creation_time''[/]'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 1
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Page to begin fetching from.
    hidden: false
    human_readable_name: page
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE>
    multiple: false
    name: page
    nargs: 1
    opts:
    - --page
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page
      opts:
      - --page
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Page to begin fetching from.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Results to fetch per API call.
    hidden: false
    human_readable_name: page_size
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE_SIZE>
    multiple: false
    name: page_size
    nargs: 1
    opts:
    - --page-size
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page_size
      opts:
      - --page-size
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Results to fetch per API call.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Maximum number of results to fetch.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LIMIT>
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: limit
      opts:
      - --limit
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Maximum number of results to fetch.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Name of a specific project to fetch.
    hidden: true
    human_readable_name: name
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <NAME>
    multiple: false
    name: name
    nargs: 1
    opts:
    - --name
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: name
      opts:
      - --name
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: true
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Name of a specific project to fetch.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Filter projects by the given public status.
    hidden: false
    human_readable_name: public
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <PUBLIC>
    multiple: false
    name: public
    nargs: 1
    opts:
    - --public
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-public
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: public
      opts:
      - --public
      secondary_opts:
      - --no-public
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Filter projects by the given public status.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Filter projects by the user who owns them.
    hidden: false
    human_readable_name: owner
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <OWNER>
    multiple: false
    name: owner
    nargs: 1
    opts:
    - --owner
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: owner
      opts:
      - --owner
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Filter projects by the user who owns them.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: project list [OPTIONS]
- category: project
  deprecated: false
  epilog: ''
  help: Fetch logs for a project.
  hidden: false
  name: project logs
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Query parameters to filter the results.
    hidden: false
    human_readable_name: query
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <QUERY>
    multiple: false
    name: query
    nargs: 1
    opts:
    - --query
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: query
      opts:
      - --query
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Query parameters to filter the results.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort by
      name ascending and id descending.'
    hidden: false
    human_readable_name: sort
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SORT>
    multiple: false
    name: sort
    nargs: 1
    opts:
    - --sort
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: sort
      opts:
      - --sort
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort
        by name ascending and id descending.'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 1
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Page to begin fetching from.
    hidden: false
    human_readable_name: page
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE>
    multiple: false
    name: page
    nargs: 1
    opts:
    - --page
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page
      opts:
      - --page
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Page to begin fetching from.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Results to fetch per API call.
    hidden: false
    human_readable_name: page_size
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE_SIZE>
    multiple: false
    name: page_size
    nargs: 1
    opts:
    - --page-size
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page_size
      opts:
      - --page-size
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Results to fetch per API call.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Maximum number of results to fetch.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LIMIT>
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: limit
      opts:
      - --limit
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Maximum number of results to fetch.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Project name to fetch logs for.
    hidden: false
    human_readable_name: PROJECT_NAME
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME>
    multiple: false
    name: project_name
    nargs: 1
    opts:
    - project_name
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Project name to fetch logs for.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name
      opts:
      - project_name
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: project logs <PROJECT_NAME> [OPTIONS]
- category: project
  deprecated: false
  epilog: ''
  help: 'List all repositories in a project.


    Alternative to `repository list`'
  hidden: false
  name: project repos
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of project to fetch repositories from.
    hidden: false
    human_readable_name: PROJECT
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT>
    multiple: false
    name: project
    nargs: 1
    opts:
    - project
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name of project to fetch repositories from.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project
      opts:
      - project
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Query parameters to filter the results.
    hidden: false
    human_readable_name: query
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <QUERY>
    multiple: false
    name: query
    nargs: 1
    opts:
    - --query
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: query
      opts:
      - --query
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Query parameters to filter the results.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort by
      name ascending and id descending.'
    hidden: false
    human_readable_name: sort
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SORT>
    multiple: false
    name: sort
    nargs: 1
    opts:
    - --sort
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: sort
      opts:
      - --sort
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort
        by name ascending and id descending.'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 1
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Page to begin fetching from.
    hidden: false
    human_readable_name: page
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE>
    multiple: false
    name: page
    nargs: 1
    opts:
    - --page
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page
      opts:
      - --page
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Page to begin fetching from.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Results to fetch per API call.
    hidden: false
    human_readable_name: page_size
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE_SIZE>
    multiple: false
    name: page_size
    nargs: 1
    opts:
    - --page-size
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page_size
      opts:
      - --page-size
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Results to fetch per API call.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Maximum number of results to fetch.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LIMIT>
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: limit
      opts:
      - --limit
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Maximum number of results to fetch.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: project repos <PROJECT> [OPTIONS]
- category: project
  deprecated: false
  epilog: ''
  help: Fetch project summary.
  hidden: false
  name: project summary
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: project summary <PROJECT_NAME_OR_ID>
- category: project
  deprecated: false
  epilog: ''
  help: Update project information.
  hidden: false
  name: project update
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The storage quota of the project.
    hidden: false
    human_readable_name: storage_limit
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <STORAGE_LIMIT>
    multiple: false
    name: storage_limit
    nargs: 1
    opts:
    - --storage-limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: storage_limit
      opts:
      - --storage-limit
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The storage quota of the project.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The ID of referenced registry when creating the proxy cache project
    hidden: false
    human_readable_name: registry_id
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <REGISTRY_ID>
    multiple: false
    name: registry_id
    nargs: 1
    opts:
    - --registry-id
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: registry_id
      opts:
      - --registry-id
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The ID of referenced registry when creating the proxy cache project
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The public status of the project.
    hidden: false
    human_readable_name: public
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PUBLIC>
    multiple: false
    name: public
    nargs: 1
    opts:
    - --public
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: public
      opts:
      - --public
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The public status of the project.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Whether content trust is enabled or not. If it is enabled, user can't pull
      unsigned images from this project.
    hidden: false
    human_readable_name: enable_content_trust
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <ENABLE_CONTENT_TRUST>
    multiple: false
    name: enable_content_trust
    nargs: 1
    opts:
    - --content-trust
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: enable_content_trust
      opts:
      - --content-trust
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Whether content trust is enabled or not. If it is enabled, user can't
        pull unsigned images from this project.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Whether cosign content trust is enabled or not. If it is enabled, user can't
      pull images without cosign signature from this project.
    hidden: false
    human_readable_name: enable_content_trust_cosign
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <ENABLE_CONTENT_TRUST_COSIGN>
    multiple: false
    name: enable_content_trust_cosign
    nargs: 1
    opts:
    - --content-trust-cosign
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: enable_content_trust_cosign
      opts:
      - --content-trust-cosign
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Whether cosign content trust is enabled or not. If it is enabled, user
        can't pull images without cosign signature from this project.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Whether prevent the vulnerable images from running.
    hidden: false
    human_readable_name: prevent_vul
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PREVENT_VUL>
    multiple: false
    name: prevent_vul
    nargs: 1
    opts:
    - --prevent-vul
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: prevent_vul
      opts:
      - --prevent-vul
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Whether prevent the vulnerable images from running.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: If the vulnerability is high than severity defined here, the images can't
      be pulled. The valid values are "none", "low", "medium", "high", "critical".
    hidden: false
    human_readable_name: severity
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SEVERITY>
    multiple: false
    name: severity
    nargs: 1
    opts:
    - --severity
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: severity
      opts:
      - --severity
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: If the vulnerability is high than severity defined here, the images can't
        be pulled. The valid values are "none", "low", "medium", "high", "critical".
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Whether scan images automatically when pushing.
    hidden: false
    human_readable_name: auto_scan
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <AUTO_SCAN>
    multiple: false
    name: auto_scan
    nargs: 1
    opts:
    - --auto-scan
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: auto_scan
      opts:
      - --auto-scan
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Whether scan images automatically when pushing.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Whether this project reuse the system level CVE allowlist as the allowlist
      of its own.   If it is set to "true" the actual allowlist associate with this
      project, if any, will be ignored.
    hidden: false
    human_readable_name: reuse_sys_cve_allowlist
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <REUSE_SYS_CVE_ALLOWLIST>
    multiple: false
    name: reuse_sys_cve_allowlist
    nargs: 1
    opts:
    - --reuse-sys-cve-allowlist
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: reuse_sys_cve_allowlist
      opts:
      - --reuse-sys-cve-allowlist
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Whether this project reuse the system level CVE allowlist as the allowlist
        of its own.   If it is set to "true" the actual allowlist associate with this
        project, if any, will be ignored.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The ID of the tag retention policy for the project
    hidden: false
    human_readable_name: retention_id
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <RETENTION_ID>
    multiple: false
    name: retention_id
    nargs: 1
    opts:
    - --retention-id
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: retention_id
      opts:
      - --retention-id
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The ID of the tag retention policy for the project
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Whether generating SBOM automatically when pushing a subject artifact.
    hidden: false
    human_readable_name: auto_sbom_generation
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <AUTO_SBOM_GENERATION>
    multiple: false
    name: auto_sbom_generation
    nargs: 1
    opts:
    - --sbom-generation
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: auto_sbom_generation
      opts:
      - --sbom-generation
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Whether generating SBOM automatically when pushing a subject artifact.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: project update <PROJECT_NAME_OR_ID> [OPTIONS]
project member:
- category: project member
  deprecated: false
  epilog: ''
  help: Add a group as a member of a project.
  hidden: false
  name: project member add-group
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: LDAP Group DN or ID of the group to use. Prefix with [bold magenta]'id:'[/]
      to specify an ID.
    hidden: false
    human_readable_name: LDAP_GROUP_DN_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <LDAP_GROUP_DN_OR_ID>
    multiple: false
    name: ldap_group_dn_or_id
    nargs: 1
    opts:
    - ldap_group_dn_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: LDAP Group DN or ID of the group to use. Prefix with [bold magenta]'id:'[/]
        to specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: ldap_group_dn_or_id
      opts:
      - ldap_group_dn_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices:
    - admin
    - developer
    - guest
    - maintainer
    - limited_guest
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The type of role to give the user.
    hidden: false
    human_readable_name: ROLE
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <ROLE>
    multiple: false
    name: role
    nargs: 1
    opts:
    - role
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The type of role to give the user.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: role
      opts:
      - role
      secondary_opts: []
      type: !!python/object:click.types.Choice
        choices:
        - admin
        - developer
        - guest
        - maintainer
        - limited_guest
        case_sensitive: true
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: project member add-group <PROJECT_NAME_OR_ID> <LDAP_GROUP_DN_OR_ID> <ROLE>
- category: project member
  deprecated: false
  epilog: ''
  help: Add a user as a member of a project.
  hidden: false
  name: project member add-user
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Username or ID of the user to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: USERNAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <USERNAME_OR_ID>
    multiple: false
    name: username_or_id
    nargs: 1
    opts:
    - username_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Username or ID of the user to use. Prefix with [bold magenta]'id:'[/]
        to specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: username_or_id
      opts:
      - username_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices:
    - admin
    - developer
    - guest
    - maintainer
    - limited_guest
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The type of role to give the user.
    hidden: false
    human_readable_name: ROLE
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <ROLE>
    multiple: false
    name: role
    nargs: 1
    opts:
    - role
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The type of role to give the user.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: role
      opts:
      - role
      secondary_opts: []
      type: !!python/object:click.types.Choice
        choices:
        - admin
        - developer
        - guest
        - maintainer
        - limited_guest
        case_sensitive: true
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: project member add-user <PROJECT_NAME_OR_ID> <USERNAME_OR_ID> <ROLE>
- category: project member
  deprecated: false
  epilog: ''
  help: ''
  hidden: false
  name: project member get
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The ID of the member to get.
    hidden: false
    human_readable_name: MEMBER_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <MEMBER_ID>
    multiple: false
    name: member_id
    nargs: 1
    opts:
    - member_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The ID of the member to get.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: member_id
      opts:
      - member_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: project member get <PROJECT_NAME_OR_ID> <MEMBER_ID>
- category: project member
  deprecated: false
  epilog: ''
  help: List all members of a project.
  hidden: false
  name: project member list
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Entity name to search for.
    hidden: false
    human_readable_name: entity_name
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <ENTITY_NAME>
    multiple: false
    name: entity_name
    nargs: 1
    opts:
    - --entity
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: entity_name
      opts:
      - --entity
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Entity name to search for.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 1
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Page to begin fetching from.
    hidden: false
    human_readable_name: page
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE>
    multiple: false
    name: page
    nargs: 1
    opts:
    - --page
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page
      opts:
      - --page
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Page to begin fetching from.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Results to fetch per API call.
    hidden: false
    human_readable_name: page_size
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE_SIZE>
    multiple: false
    name: page_size
    nargs: 1
    opts:
    - --page-size
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page_size
      opts:
      - --page-size
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Results to fetch per API call.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Maximum number of results to fetch.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LIMIT>
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: limit
      opts:
      - --limit
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Maximum number of results to fetch.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: project member list <PROJECT_NAME_OR_ID> [OPTIONS]
- category: project member
  deprecated: false
  epilog: ''
  help: ''
  hidden: false
  name: project member remove
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Username or ID of the user to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: USERNAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <USERNAME_OR_ID>
    multiple: false
    name: username_or_id
    nargs: 1
    opts:
    - username_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Username or ID of the user to use. Prefix with [bold magenta]'id:'[/]
        to specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: username_or_id
      opts:
      - username_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: project member remove <PROJECT_NAME_OR_ID> <USERNAME_OR_ID>
- category: project member
  deprecated: false
  epilog: ''
  help: Add a user as a member of a project.
  hidden: false
  name: project member update-role
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Username or ID of the user to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: USERNAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <USERNAME_OR_ID>
    multiple: false
    name: username_or_id
    nargs: 1
    opts:
    - username_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Username or ID of the user to use. Prefix with [bold magenta]'id:'[/]
        to specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: username_or_id
      opts:
      - username_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices:
    - admin
    - developer
    - guest
    - maintainer
    - limited_guest
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The type of role to give the user.
    hidden: false
    human_readable_name: ROLE
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <ROLE>
    multiple: false
    name: role
    nargs: 1
    opts:
    - role
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The type of role to give the user.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: role
      opts:
      - role
      secondary_opts: []
      type: !!python/object:click.types.Choice
        choices:
        - admin
        - developer
        - guest
        - maintainer
        - limited_guest
        case_sensitive: true
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: project member update-role <PROJECT_NAME_OR_ID> <USERNAME_OR_ID> <ROLE>
project metadata field:
- category: project metadata field
  deprecated: false
  epilog: ''
  help: Delete a single field in the metadata for a project.
  hidden: false
  name: project metadata field delete
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The metadata field to delete.
    hidden: false
    human_readable_name: FIELD
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <FIELD>
    multiple: false
    name: field
    nargs: 1
    opts:
    - field
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The metadata field to delete.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: field
      opts:
      - field
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Force deletion without confirmation.
    hidden: false
    human_readable_name: force
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <FORCE>
    multiple: false
    name: force
    nargs: 1
    opts:
    - --force
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: force
      opts:
      - --force
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Force deletion without confirmation.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: project metadata field delete <PROJECT_NAME_OR_ID> <FIELD> [OPTIONS]
- category: project metadata field
  deprecated: false
  epilog: ''
  help: 'Get a single field from the metadata for a project. NOTE: does not support
    table output currently.'
  hidden: false
  name: project metadata field get
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The name of the field to get.
    hidden: false
    human_readable_name: FIELD
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <FIELD>
    multiple: false
    name: field
    nargs: 1
    opts:
    - field
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The name of the field to get.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: field
      opts:
      - field
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: project metadata field get <PROJECT_NAME_OR_ID> <FIELD>
- category: project metadata field
  deprecated: false
  epilog: ''
  help: Set a single field in the metadata for a project.
  hidden: false
  name: project metadata field set
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The name of the field to set.
    hidden: false
    human_readable_name: FIELD
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <FIELD>
    multiple: false
    name: field
    nargs: 1
    opts:
    - field
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The name of the field to set.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: field
      opts:
      - field
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The value to set.
    hidden: false
    human_readable_name: VALUE
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <VALUE>
    multiple: false
    name: value
    nargs: 1
    opts:
    - value
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The value to set.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: value
      opts:
      - value
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: project metadata field set <PROJECT_NAME_OR_ID> <FIELD> <VALUE>
project metadata:
- category: project metadata
  deprecated: false
  epilog: ''
  help: Get metadata for a project.
  hidden: false
  name: project metadata get
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: project metadata get <PROJECT_NAME_OR_ID>
- category: project metadata
  deprecated: false
  epilog: ''
  help: Set metadata for a project.
  hidden: false
  name: project metadata set
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The public status of the project. The valid values are "true", "false".
    hidden: false
    human_readable_name: public
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PUBLIC>
    multiple: false
    name: public
    nargs: 1
    opts:
    - --public
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: public
      opts:
      - --public
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The public status of the project. The valid values are "true", "false".
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Whether content trust is enabled or not. If it is enabled, user can't pull
      unsigned images from this project. The valid values are "true", "false".
    hidden: false
    human_readable_name: enable_content_trust
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <ENABLE_CONTENT_TRUST>
    multiple: false
    name: enable_content_trust
    nargs: 1
    opts:
    - --content-trust
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: enable_content_trust
      opts:
      - --content-trust
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Whether content trust is enabled or not. If it is enabled, user can't
        pull unsigned images from this project. The valid values are "true", "false".
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: ''
    hidden: false
    human_readable_name: content_trust_cosign
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <CONTENT_TRUST_COSIGN>
    multiple: false
    name: content_trust_cosign
    nargs: 1
    opts:
    - --content-trust-cosign
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: content_trust_cosign
      opts:
      - --content-trust-cosign
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: null
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Whether prevent the vulnerable images from running. The valid values are
      "true", "false".
    hidden: false
    human_readable_name: prevent_vul
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PREVENT_VUL>
    multiple: false
    name: prevent_vul
    nargs: 1
    opts:
    - --prevent-vul
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: prevent_vul
      opts:
      - --prevent-vul
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Whether prevent the vulnerable images from running. The valid values are
        "true", "false".
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: If the vulnerability is high than severity defined here, the images can't
      be pulled. The valid values are "none", "low", "medium", "high", "critical".
    hidden: false
    human_readable_name: severity
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SEVERITY>
    multiple: false
    name: severity
    nargs: 1
    opts:
    - --severity
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: severity
      opts:
      - --severity
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: If the vulnerability is high than severity defined here, the images can't
        be pulled. The valid values are "none", "low", "medium", "high", "critical".
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Whether scan images automatically when pushing. The valid values are "true",
      "false".
    hidden: false
    human_readable_name: auto_scan
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <AUTO_SCAN>
    multiple: false
    name: auto_scan
    nargs: 1
    opts:
    - --auto-scan
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: auto_scan
      opts:
      - --auto-scan
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Whether scan images automatically when pushing. The valid values are "true",
        "false".
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Whether this project reuse the system level CVE allowlist as the allowlist
      of its own.  The valid values are "true", "false". If it is set to "true" the
      actual allowlist associate with this project, if any, will be ignored.
    hidden: false
    human_readable_name: reuse_sys_cve_allowlist
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <REUSE_SYS_CVE_ALLOWLIST>
    multiple: false
    name: reuse_sys_cve_allowlist
    nargs: 1
    opts:
    - --reuse-sys-cve-allowlist
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: reuse_sys_cve_allowlist
      opts:
      - --reuse-sys-cve-allowlist
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Whether this project reuse the system level CVE allowlist as the allowlist
        of its own.  The valid values are "true", "false". If it is set to "true"
        the actual allowlist associate with this project, if any, will be ignored.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The ID of the tag retention policy for the project
    hidden: false
    human_readable_name: retention_id
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <RETENTION_ID>
    multiple: false
    name: retention_id
    nargs: 1
    opts:
    - --retention-id
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: retention_id
      opts:
      - --retention-id
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The ID of the tag retention policy for the project
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: []
    envvar: null
    expose_value: true
    flag_value: true
    help: 'Extra metadata to set beyond the fields in the spec. Format: [bold magenta]''key=value''[/]. '
    hidden: false
    human_readable_name: extra
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <KEY=VALUE,[KEY=VALUE...]>
    multiple: true
    name: extra
    nargs: 1
    opts:
    - --extra
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: extra
      opts:
      - --extra
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: 1
      multiple: true
      expose_value: true
      default: []
      is_eager: false
      metavar: KEY=VALUE
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'Extra metadata to set beyond the fields in the spec. Format: [bold magenta]''key=value''[/]. '
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: project metadata set <PROJECT_NAME_OR_ID> [OPTIONS]
project scanner:
- category: project scanner
  deprecated: false
  epilog: ''
  help: ''
  hidden: false
  name: project scanner candidates
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Query parameters to filter the results.
    hidden: false
    human_readable_name: query
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <QUERY>
    multiple: false
    name: query
    nargs: 1
    opts:
    - --query
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: query
      opts:
      - --query
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Query parameters to filter the results.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort by
      name ascending and id descending.'
    hidden: false
    human_readable_name: sort
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SORT>
    multiple: false
    name: sort
    nargs: 1
    opts:
    - --sort
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: sort
      opts:
      - --sort
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort
        by name ascending and id descending.'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 1
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Page to begin fetching from.
    hidden: false
    human_readable_name: page
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE>
    multiple: false
    name: page
    nargs: 1
    opts:
    - --page
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page
      opts:
      - --page
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Page to begin fetching from.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Results to fetch per API call.
    hidden: false
    human_readable_name: page_size
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE_SIZE>
    multiple: false
    name: page_size
    nargs: 1
    opts:
    - --page-size
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page_size
      opts:
      - --page-size
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Results to fetch per API call.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: project scanner candidates <PROJECT_NAME_OR_ID> [OPTIONS]
- category: project scanner
  deprecated: false
  epilog: ''
  help: ''
  hidden: false
  name: project scanner get
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: project scanner get <PROJECT_NAME_OR_ID>
- category: project scanner
  deprecated: false
  epilog: ''
  help: ''
  hidden: false
  name: project scanner set
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID of the scanner to set.
    hidden: false
    human_readable_name: SCANNER_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <SCANNER_ID>
    multiple: false
    name: scanner_id
    nargs: 1
    opts:
    - scanner_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: ID of the scanner to set.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: scanner_id
      opts:
      - scanner_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: project scanner set <PROJECT_NAME_OR_ID> <SCANNER_ID>
quota:
- category: quota
  deprecated: false
  epilog: ''
  help: Fetch a quota.
  hidden: false
  name: quota get
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID of quota to get.
    hidden: false
    human_readable_name: QUOTA_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <QUOTA_ID>
    multiple: false
    name: quota_id
    nargs: 1
    opts:
    - quota_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: ID of quota to get.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: quota_id
      opts:
      - quota_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: quota get <QUOTA_ID>
- category: quota
  deprecated: false
  epilog: ''
  help: List registries.
  hidden: false
  name: quota list
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Reference type of quotas to list.
    hidden: false
    human_readable_name: reference
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <REFERENCE>
    multiple: false
    name: reference
    nargs: 1
    opts:
    - --reference
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: reference
      opts:
      - --reference
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Reference type of quotas to list.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Reference ID of quotas to list.
    hidden: false
    human_readable_name: reference_id
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <REFERENCE_ID>
    multiple: false
    name: reference_id
    nargs: 1
    opts:
    - --reference-id
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: reference_id
      opts:
      - --reference-id
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Reference ID of quotas to list.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'Sort order of quotas to list. Valid values include: [green]''hard.resource_name''[/green],
      [green]''-hard.resource_name''[/green], [green]''used.resource_name''[/green],
      [green]''-used.resource_name''[/green].'
    hidden: false
    human_readable_name: sort
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SORT>
    multiple: false
    name: sort
    nargs: 1
    opts:
    - --sort
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: sort
      opts:
      - --sort
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'Sort order of quotas to list. Valid values include: [green]''hard.resource_name''[/green],
        [green]''-hard.resource_name''[/green], [green]''used.resource_name''[/green],
        [green]''-used.resource_name''[/green].'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 1
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Page to begin fetching from.
    hidden: false
    human_readable_name: page
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE>
    multiple: false
    name: page
    nargs: 1
    opts:
    - --page
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page
      opts:
      - --page
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Page to begin fetching from.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Results to fetch per API call.
    hidden: false
    human_readable_name: page_size
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE_SIZE>
    multiple: false
    name: page_size
    nargs: 1
    opts:
    - --page-size
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page_size
      opts:
      - --page-size
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Results to fetch per API call.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Maximum number of results to fetch.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LIMIT>
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: limit
      opts:
      - --limit
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Maximum number of results to fetch.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: quota list [OPTIONS]
- category: quota
  deprecated: false
  epilog: ''
  help: Update a quota.
  hidden: false
  name: quota update
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID of quota to update.
    hidden: false
    human_readable_name: QUOTA_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <QUOTA_ID>
    multiple: false
    name: quota_id
    nargs: 1
    opts:
    - quota_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: ID of quota to update.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: quota_id
      opts:
      - quota_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Quota properties to update in the format [green]'property=value'[/green].
      Multiple properties can be provided separated by spaces or commas. [red]NOTE:[/red]
      It is likely the property should always be [green]'storage'[/green] and the
      value an integer representing the quota size in bytes.
    hidden: false
    human_readable_name: PROP=VALUE, ...
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROP=VALUE, ...>
    multiple: false
    name: properties
    nargs: -1
    opts:
    - properties
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Quota properties to update in the format [green]'property=value'[/green].
        Multiple properties can be provided separated by spaces or commas. [red]NOTE:[/red]
        It is likely the property should always be [green]'storage'[/green] and the
        value an integer representing the quota size in bytes.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: properties
      opts:
      - properties
      secondary_opts: []
      type: *id001
      required: true
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: -1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: PROP=VALUE, ...
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: quota update <QUOTA_ID> <PROP=VALUE, ...>
registry:
- category: registry
  deprecated: false
  epilog: ''
  help: Get available adapters
  hidden: false
  name: registry adapters
  options_metavar: '[OPTIONS]'
  params: []
  score: 0
  short_help: ''
  usage: registry adapters
- category: registry
  deprecated: false
  epilog: ''
  help: Create a new registry.
  hidden: false
  name: registry create
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The registry name.
    hidden: false
    human_readable_name: NAME
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <NAME>
    multiple: false
    name: name
    nargs: 1
    opts:
    - name
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The registry name.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: name
      opts:
      - name
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The registry URL string.
    hidden: false
    human_readable_name: URL
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <URL>
    multiple: false
    name: url
    nargs: 1
    opts:
    - url
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The registry URL string.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: url
      opts:
      - url
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: ''
    hidden: false
    human_readable_name: credential_type
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <CREDENTIAL_TYPE>
    multiple: false
    name: credential_type
    nargs: 1
    opts:
    - --credential-type
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: credential_type
      opts:
      - --credential-type
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: null
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Access key, e.g. user name when credential type is 'basic'.
    hidden: false
    human_readable_name: access_key
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <ACCESS_KEY>
    multiple: false
    name: access_key
    nargs: 1
    opts:
    - --access-key
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: access_key
      opts:
      - --access-key
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Access key, e.g. user name when credential type is 'basic'.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Access secret, e.g. password when credential type is 'basic'.
    hidden: false
    human_readable_name: access_secret
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <ACCESS_SECRET>
    multiple: false
    name: access_secret
    nargs: 1
    opts:
    - --access-secret
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: access_secret
      opts:
      - --access-secret
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Access secret, e.g. password when credential type is 'basic'.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Type of the registry, e.g. 'harbor'.
    hidden: false
    human_readable_name: type
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <TYPE>
    multiple: false
    name: type
    nargs: 1
    opts:
    - --type
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: type
      opts:
      - --type
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Type of the registry, e.g. 'harbor'.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Disable verification of TLS certificates.
    hidden: false
    human_readable_name: insecure
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <INSECURE>
    multiple: false
    name: insecure
    nargs: 1
    opts:
    - --insecure
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: insecure
      opts:
      - --insecure
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Disable verification of TLS certificates.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Description of the registry.
    hidden: false
    human_readable_name: description
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <DESCRIPTION>
    multiple: false
    name: description
    nargs: 1
    opts:
    - --description
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: description
      opts:
      - --description
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Description of the registry.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: registry create <NAME> <URL> [OPTIONS]
- category: registry
  deprecated: false
  epilog: ''
  help: Delete a registry.
  hidden: false
  name: registry delete
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID of registry to delete.
    hidden: false
    human_readable_name: REGISTRY_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <REGISTRY_ID>
    multiple: false
    name: registry_id
    nargs: 1
    opts:
    - registry_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: ID of registry to delete.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: registry_id
      opts:
      - registry_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Force deletion without confirmation.
    hidden: false
    human_readable_name: force
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <FORCE>
    multiple: false
    name: force
    nargs: 1
    opts:
    - --force
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: force
      opts:
      - --force
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Force deletion without confirmation.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: registry delete <REGISTRY_ID> [OPTIONS]
- category: registry
  deprecated: false
  epilog: ''
  help: Fetch a registry.
  hidden: false
  name: registry get
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID of registry to get.
    hidden: false
    human_readable_name: REGISTRY_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <REGISTRY_ID>
    multiple: false
    name: registry_id
    nargs: 1
    opts:
    - registry_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: ID of registry to get.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: registry_id
      opts:
      - registry_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: registry get <REGISTRY_ID>
- category: registry
  deprecated: false
  epilog: ''
  help: Get information about a registry's triggers and resource filters
  hidden: false
  name: registry info
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID of registry to get info for.
    hidden: false
    human_readable_name: REGISTRY_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <REGISTRY_ID>
    multiple: false
    name: registry_id
    nargs: 1
    opts:
    - registry_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: ID of registry to get info for.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: registry_id
      opts:
      - registry_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: registry info <REGISTRY_ID>
- category: registry
  deprecated: false
  epilog: ''
  help: List registries.
  hidden: false
  name: registry list
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Query parameters to filter the results.
    hidden: false
    human_readable_name: query
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <QUERY>
    multiple: false
    name: query
    nargs: 1
    opts:
    - --query
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: query
      opts:
      - --query
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Query parameters to filter the results.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort by
      name ascending and id descending.'
    hidden: false
    human_readable_name: sort
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SORT>
    multiple: false
    name: sort
    nargs: 1
    opts:
    - --sort
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: sort
      opts:
      - --sort
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort
        by name ascending and id descending.'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 1
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Page to begin fetching from.
    hidden: false
    human_readable_name: page
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE>
    multiple: false
    name: page
    nargs: 1
    opts:
    - --page
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page
      opts:
      - --page
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Page to begin fetching from.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Results to fetch per API call.
    hidden: false
    human_readable_name: page_size
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE_SIZE>
    multiple: false
    name: page_size
    nargs: 1
    opts:
    - --page-size
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page_size
      opts:
      - --page-size
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Results to fetch per API call.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Maximum number of results to fetch.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LIMIT>
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: limit
      opts:
      - --limit
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Maximum number of results to fetch.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: registry list [OPTIONS]
- category: registry
  deprecated: false
  epilog: ''
  help: Ping a registry to see if it's reachable.
  hidden: false
  name: registry ping
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID of registry to get status of.
    hidden: false
    human_readable_name: REGISTRY_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <REGISTRY_ID>
    multiple: false
    name: registry_id
    nargs: 1
    opts:
    - registry_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: ID of registry to get status of.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: registry_id
      opts:
      - registry_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Type of the registry, e.g. 'harbor'.
    hidden: false
    human_readable_name: type
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <TYPE>
    multiple: false
    name: type
    nargs: 1
    opts:
    - --type
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: type
      opts:
      - --type
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Type of the registry, e.g. 'harbor'.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The registry URL.
    hidden: false
    human_readable_name: url
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <URL>
    multiple: false
    name: url
    nargs: 1
    opts:
    - --url
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: url
      opts:
      - --url
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The registry URL.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Credential type of the registry, e.g. 'basic'.
    hidden: false
    human_readable_name: credential_type
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <CREDENTIAL_TYPE>
    multiple: false
    name: credential_type
    nargs: 1
    opts:
    - --credential-type
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: credential_type
      opts:
      - --credential-type
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Credential type of the registry, e.g. 'basic'.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The registry access key.
    hidden: false
    human_readable_name: access_key
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <ACCESS_KEY>
    multiple: false
    name: access_key
    nargs: 1
    opts:
    - --access-key
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: access_key
      opts:
      - --access-key
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The registry access key.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The registry access secret.
    hidden: false
    human_readable_name: access_secret
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <ACCESS_SECRET>
    multiple: false
    name: access_secret
    nargs: 1
    opts:
    - --access-secret
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: access_secret
      opts:
      - --access-secret
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The registry access secret.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Whether or not the certificate will be verified when Harbor tries to access
      the server.
    hidden: false
    human_readable_name: insecure
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <INSECURE>
    multiple: false
    name: insecure
    nargs: 1
    opts:
    - --insecure
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: insecure
      opts:
      - --insecure
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Whether or not the certificate will be verified when Harbor tries to access
        the server.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: registry ping <REGISTRY_ID> [OPTIONS]
- category: registry
  deprecated: false
  epilog: ''
  help: List all available registry providers
  hidden: false
  name: registry providers
  options_metavar: '[OPTIONS]'
  params: []
  score: 0
  short_help: ''
  usage: registry providers
- category: registry
  deprecated: false
  epilog: ''
  help: Update a registry.
  hidden: false
  name: registry update
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID of registry to update.
    hidden: false
    human_readable_name: REGISTRY_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <REGISTRY_ID>
    multiple: false
    name: registry_id
    nargs: 1
    opts:
    - registry_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: ID of registry to update.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: registry_id
      opts:
      - registry_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The registry name.
    hidden: false
    human_readable_name: name
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <NAME>
    multiple: false
    name: name
    nargs: 1
    opts:
    - --name
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: name
      opts:
      - --name
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The registry name.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The registry URL.
    hidden: false
    human_readable_name: url
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <URL>
    multiple: false
    name: url
    nargs: 1
    opts:
    - --url
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: url
      opts:
      - --url
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The registry URL.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Description of the registry.
    hidden: false
    human_readable_name: description
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <DESCRIPTION>
    multiple: false
    name: description
    nargs: 1
    opts:
    - --description
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: description
      opts:
      - --description
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Description of the registry.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Credential type of the registry, e.g. 'basic'.
    hidden: false
    human_readable_name: credential_type
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <CREDENTIAL_TYPE>
    multiple: false
    name: credential_type
    nargs: 1
    opts:
    - --credential-type
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: credential_type
      opts:
      - --credential-type
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Credential type of the registry, e.g. 'basic'.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The registry access key.
    hidden: false
    human_readable_name: access_key
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <ACCESS_KEY>
    multiple: false
    name: access_key
    nargs: 1
    opts:
    - --access-key
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: access_key
      opts:
      - --access-key
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The registry access key.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The registry access secret.
    hidden: false
    human_readable_name: access_secret
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <ACCESS_SECRET>
    multiple: false
    name: access_secret
    nargs: 1
    opts:
    - --access-secret
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: access_secret
      opts:
      - --access-secret
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The registry access secret.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Whether or not the certificate will be verified when Harbor tries to access
      the server.
    hidden: false
    human_readable_name: insecure
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <INSECURE>
    multiple: false
    name: insecure
    nargs: 1
    opts:
    - --insecure
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: insecure
      opts:
      - --insecure
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Whether or not the certificate will be verified when Harbor tries to access
        the server.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: registry update <REGISTRY_ID> [OPTIONS]
replication:
- category: replication
  deprecated: false
  epilog: ''
  help: Get information about a replication execution.
  hidden: false
  name: replication get
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The ID of the replication execution.
    hidden: false
    human_readable_name: EXECUTION_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <EXECUTION_ID>
    multiple: false
    name: execution_id
    nargs: 1
    opts:
    - execution_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The ID of the replication execution.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: execution_id
      opts:
      - execution_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: replication get <EXECUTION_ID>
- category: replication
  deprecated: false
  epilog: ''
  help: List replication executions.
  hidden: false
  name: replication list
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort by
      name ascending and id descending.'
    hidden: false
    human_readable_name: sort
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SORT>
    multiple: false
    name: sort
    nargs: 1
    opts:
    - --sort
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: sort
      opts:
      - --sort
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort
        by name ascending and id descending.'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The ID of the policy to list executions for.
    hidden: false
    human_readable_name: policy_id
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <POLICY_ID>
    multiple: false
    name: policy_id
    nargs: 1
    opts:
    - --policy-id
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: policy_id
      opts:
      - --policy-id
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The ID of the policy to list executions for.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The status of the executions to list.
    hidden: false
    human_readable_name: status
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <STATUS>
    multiple: false
    name: status
    nargs: 1
    opts:
    - --status
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: status
      opts:
      - --status
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The status of the executions to list.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The trigger of the executions to list.
    hidden: false
    human_readable_name: trigger
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <TRIGGER>
    multiple: false
    name: trigger
    nargs: 1
    opts:
    - --trigger
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: trigger
      opts:
      - --trigger
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The trigger of the executions to list.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 1
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Page to begin fetching from.
    hidden: false
    human_readable_name: page
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE>
    multiple: false
    name: page
    nargs: 1
    opts:
    - --page
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page
      opts:
      - --page
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Page to begin fetching from.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Results to fetch per API call.
    hidden: false
    human_readable_name: page_size
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE_SIZE>
    multiple: false
    name: page_size
    nargs: 1
    opts:
    - --page-size
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page_size
      opts:
      - --page-size
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Results to fetch per API call.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Maximum number of results to fetch.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LIMIT>
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: limit
      opts:
      - --limit
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Maximum number of results to fetch.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: replication list [OPTIONS]
- category: replication
  deprecated: false
  epilog: ''
  help: Start a replication execution.
  hidden: false
  name: replication start
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The ID of the policy to start a execution for.
    hidden: false
    human_readable_name: POLICY_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <POLICY_ID>
    multiple: false
    name: policy_id
    nargs: 1
    opts:
    - policy_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The ID of the policy to start a execution for.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: policy_id
      opts:
      - policy_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: replication start <POLICY_ID>
- category: replication
  deprecated: false
  epilog: ''
  help: Stop a replication execution.
  hidden: false
  name: replication stop
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The ID of the replication execution.
    hidden: false
    human_readable_name: EXECUTION_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <EXECUTION_ID>
    multiple: false
    name: execution_id
    nargs: 1
    opts:
    - execution_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The ID of the replication execution.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: execution_id
      opts:
      - execution_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: replication stop <EXECUTION_ID>
replication policy:
- category: replication policy
  deprecated: false
  epilog: ''
  help: Create a replication policy.
  hidden: false
  name: replication policy create
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The policy name.
    hidden: false
    human_readable_name: NAME
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <NAME>
    multiple: false
    name: name
    nargs: 1
    opts:
    - name
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The policy name.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: name
      opts:
      - name
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The ID of registry to replicate from. Typically an external registry such
      as [green]'hub.docker.com'[/], [green]'ghcr.io'[/], etc.
    hidden: false
    human_readable_name: SRC_REGISTRY_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <SRC_REGISTRY_ID>
    multiple: false
    name: src_registry_id
    nargs: 1
    opts:
    - src_registry_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The ID of registry to replicate from. Typically an external registry such
        as [green]'hub.docker.com'[/], [green]'ghcr.io'[/], etc.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: src_registry_id
      opts:
      - src_registry_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The ID of the registry to replicate to.
    hidden: false
    human_readable_name: DEST_REGISTRY_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <DEST_REGISTRY_ID>
    multiple: false
    name: dest_registry_id
    nargs: 1
    opts:
    - dest_registry_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The ID of the registry to replicate to.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: dest_registry_id
      opts:
      - dest_registry_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The description of the policy.
    hidden: false
    human_readable_name: description
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <DESCRIPTION>
    multiple: false
    name: description
    nargs: 1
    opts:
    - --description
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: description
      opts:
      - --description
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The description of the policy.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The destination namespace.
    hidden: false
    human_readable_name: dest_namespace
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <DEST_NAMESPACE>
    multiple: false
    name: dest_namespace
    nargs: 1
    opts:
    - --dest-namespace
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: dest_namespace
      opts:
      - --dest-namespace
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The destination namespace.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'Specify how many path components will be replaced by the provided destination
      namespace.

      The default value is -1 in which case the legacy mode will be applied.'
    hidden: false
    human_readable_name: dest_namespace_replace_count
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <DEST_NAMESPACE_REPLACE_COUNT>
    multiple: false
    name: dest_namespace_replace_count
    nargs: 1
    opts:
    - --dest-namespace-replace-count
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: dest_namespace_replace_count
      opts:
      - --dest-namespace-replace-count
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'Specify how many path components will be replaced by the provided destination
        namespace.

        The default value is -1 in which case the legacy mode will be applied.'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The replication policy trigger type. The valid values are manual, event_based
      and scheduled.
    hidden: false
    human_readable_name: replication_trigger_type
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <REPLICATION_TRIGGER_TYPE>
    multiple: false
    name: replication_trigger_type
    nargs: 1
    opts:
    - --trigger-type
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: replication_trigger_type
      opts:
      - --trigger-type
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The replication policy trigger type. The valid values are manual, event_based
        and scheduled.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The cron string for scheduled trigger
    hidden: false
    human_readable_name: replication_trigger_cron
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <REPLICATION_TRIGGER_CRON>
    multiple: false
    name: replication_trigger_cron
    nargs: 1
    opts:
    - --trigger-cron
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: replication_trigger_cron
      opts:
      - --trigger-cron
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The cron string for scheduled trigger
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Filter the name of the resource. Leave empty or use [green]'**'[/] to match
      all. [green]'library/**'[/] only matches resources under [cyan]'library'[/].
      For more patterns, please refer to the offical Harbor user guide.
    hidden: false
    human_readable_name: filter_name
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <FILTER_NAME>
    multiple: false
    name: filter_name
    nargs: 1
    opts:
    - --filter-name
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: filter_name
      opts:
      - --filter-name
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Filter the name of the resource. Leave empty or use [green]'**'[/] to
        match all. [green]'library/**'[/] only matches resources under [cyan]'library'[/].
        For more patterns, please refer to the offical Harbor user guide.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'Filter the tag of the resource. '
    hidden: false
    human_readable_name: filter_tag
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <FILTER_TAG>
    multiple: false
    name: filter_tag
    nargs: 1
    opts:
    - --filter-tag
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: filter_tag
      opts:
      - --filter-tag
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'Filter the tag of the resource. '
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices:
    - matches
    - excludes
    count: false
    default: matches
    envvar: null
    expose_value: true
    flag_value: false
    help: Match or exclude the given tag
    hidden: false
    human_readable_name: filter_tag_mode
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <FILTER_TAG_MODE>
    multiple: false
    name: filter_tag_mode
    nargs: 1
    opts:
    - --filter-tag-mode
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: filter_tag_mode
      opts:
      - --filter-tag-mode
      secondary_opts: []
      type: !!python/object:click.types.Choice
        choices:
        - matches
        - excludes
        case_sensitive: true
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: matches
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: Match or exclude the given tag
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'Filter the label of the resource. '
    hidden: false
    human_readable_name: filter_label
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <FILTER_LABEL>
    multiple: false
    name: filter_label
    nargs: 1
    opts:
    - --filter-label
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: filter_label
      opts:
      - --filter-label
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'Filter the label of the resource. '
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices:
    - matches
    - excludes
    count: false
    default: matches
    envvar: null
    expose_value: true
    flag_value: false
    help: Match or exclude the given label
    hidden: false
    human_readable_name: filter_label_mode
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <FILTER_LABEL_MODE>
    multiple: false
    name: filter_label_mode
    nargs: 1
    opts:
    - --filter-label-mode
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: filter_label_mode
      opts:
      - --filter-label-mode
      secondary_opts: []
      type: !!python/object:click.types.Choice
        choices:
        - matches
        - excludes
        case_sensitive: true
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: matches
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: Match or exclude the given label
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices:
    - all
    - image
    - artifact
    count: false
    default: all
    envvar: null
    expose_value: true
    flag_value: false
    help: Filter the resource type to replicate.
    hidden: false
    human_readable_name: filter_resource
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <FILTER_RESOURCE>
    multiple: false
    name: filter_resource
    nargs: 1
    opts:
    - --filter-resource
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: filter_resource
      opts:
      - --filter-resource
      secondary_opts: []
      type: !!python/object:click.types.Choice
        choices:
        - all
        - image
        - artifact
        case_sensitive: true
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: all
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: Filter the resource type to replicate.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Whether to replicate the deletion operation.
    hidden: false
    human_readable_name: replicate_deletion
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <REPLICATE_DELETION>
    multiple: false
    name: replicate_deletion
    nargs: 1
    opts:
    - --replicate-deletion
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: replicate_deletion
      opts:
      - --replicate-deletion
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Whether to replicate the deletion operation.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Whether to override the resources on the destination registry.
    hidden: false
    human_readable_name: override
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <OVERRIDE>
    multiple: false
    name: override
    nargs: 1
    opts:
    - --override
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: override
      opts:
      - --override
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Whether to override the resources on the destination registry.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Whether the policy is enabled or not.
    hidden: false
    human_readable_name: enabled
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <ENABLED>
    multiple: false
    name: enabled
    nargs: 1
    opts:
    - --enabled
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: enabled
      opts:
      - --enabled
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Whether the policy is enabled or not.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: speed limit for each task
    hidden: false
    human_readable_name: speed
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SPEED>
    multiple: false
    name: speed
    nargs: 1
    opts:
    - --speed-limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: speed
      opts:
      - --speed-limit
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: speed limit for each task
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: replication policy create <NAME> <SRC_REGISTRY_ID> <DEST_REGISTRY_ID> [OPTIONS]
- category: replication policy
  deprecated: false
  epilog: ''
  help: Delete a replication policy.
  hidden: false
  name: replication policy delete
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The ID of the replication policy.
    hidden: false
    human_readable_name: POLICY_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <POLICY_ID>
    multiple: false
    name: policy_id
    nargs: 1
    opts:
    - policy_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The ID of the replication policy.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: policy_id
      opts:
      - policy_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Force deletion without confirmation.
    hidden: false
    human_readable_name: force
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <FORCE>
    multiple: false
    name: force
    nargs: 1
    opts:
    - --force
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: force
      opts:
      - --force
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Force deletion without confirmation.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: replication policy delete <POLICY_ID> [OPTIONS]
- category: replication policy
  deprecated: false
  epilog: ''
  help: Get information about a replication policy.
  hidden: false
  name: replication policy get
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The ID of the replication policy.
    hidden: false
    human_readable_name: POLICY_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <POLICY_ID>
    multiple: false
    name: policy_id
    nargs: 1
    opts:
    - policy_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The ID of the replication policy.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: policy_id
      opts:
      - policy_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: replication policy get <POLICY_ID>
- category: replication policy
  deprecated: false
  epilog: ''
  help: List replication policies.
  hidden: false
  name: replication policy list
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Query parameters to filter the results.
    hidden: false
    human_readable_name: query
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <QUERY>
    multiple: false
    name: query
    nargs: 1
    opts:
    - --query
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: query
      opts:
      - --query
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Query parameters to filter the results.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort by
      name ascending and id descending.'
    hidden: false
    human_readable_name: sort
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SORT>
    multiple: false
    name: sort
    nargs: 1
    opts:
    - --sort
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: sort
      opts:
      - --sort
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort
        by name ascending and id descending.'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 1
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Page to begin fetching from.
    hidden: false
    human_readable_name: page
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE>
    multiple: false
    name: page
    nargs: 1
    opts:
    - --page
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page
      opts:
      - --page
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Page to begin fetching from.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Results to fetch per API call.
    hidden: false
    human_readable_name: page_size
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE_SIZE>
    multiple: false
    name: page_size
    nargs: 1
    opts:
    - --page-size
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page_size
      opts:
      - --page-size
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Results to fetch per API call.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Maximum number of results to fetch.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LIMIT>
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: limit
      opts:
      - --limit
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Maximum number of results to fetch.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: replication policy list [OPTIONS]
replication task:
- category: replication task
  deprecated: false
  epilog: ''
  help: List replication tasks.
  hidden: false
  name: replication task list
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort by
      name ascending and id descending.'
    hidden: false
    human_readable_name: sort
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SORT>
    multiple: false
    name: sort
    nargs: 1
    opts:
    - --sort
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: sort
      opts:
      - --sort
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort
        by name ascending and id descending.'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Task status to filter by.
    hidden: false
    human_readable_name: status
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <STATUS>
    multiple: false
    name: status
    nargs: 1
    opts:
    - --status
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: status
      opts:
      - --status
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Task status to filter by.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Task resource type to filter by.
    hidden: false
    human_readable_name: resource_type
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <RESOURCE_TYPE>
    multiple: false
    name: resource_type
    nargs: 1
    opts:
    - --resource-type
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: resource_type
      opts:
      - --resource-type
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Task resource type to filter by.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 1
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Page to begin fetching from.
    hidden: false
    human_readable_name: page
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE>
    multiple: false
    name: page
    nargs: 1
    opts:
    - --page
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page
      opts:
      - --page
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Page to begin fetching from.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Results to fetch per API call.
    hidden: false
    human_readable_name: page_size
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE_SIZE>
    multiple: false
    name: page_size
    nargs: 1
    opts:
    - --page-size
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page_size
      opts:
      - --page-size
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Results to fetch per API call.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The ID of the replication execution to list tasks for.
    hidden: false
    human_readable_name: EXECUTION_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <EXECUTION_ID>
    multiple: false
    name: execution_id
    nargs: 1
    opts:
    - execution_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The ID of the replication execution to list tasks for.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: execution_id
      opts:
      - execution_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: replication task list <EXECUTION_ID> [OPTIONS]
- category: replication task
  deprecated: false
  epilog: ''
  help: Get the log for a replication task.
  hidden: false
  name: replication task log
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The ID of the execution the task belongs to.
    hidden: false
    human_readable_name: EXECUTION_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <EXECUTION_ID>
    multiple: false
    name: execution_id
    nargs: 1
    opts:
    - execution_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The ID of the execution the task belongs to.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: execution_id
      opts:
      - execution_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The ID of the task to get the log for.
    hidden: false
    human_readable_name: TASK_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <TASK_ID>
    multiple: false
    name: task_id
    nargs: 1
    opts:
    - task_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The ID of the task to get the log for.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: task_id
      opts:
      - task_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: replication task log <EXECUTION_ID> <TASK_ID>
repository:
- category: repository
  deprecated: false
  epilog: ''
  help: Delete a repository.
  hidden: false
  name: repository delete
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of the project the repository belongs to.
    hidden: false
    human_readable_name: PROJECT
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT>
    multiple: false
    name: project
    nargs: 1
    opts:
    - project
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name of the project the repository belongs to.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project
      opts:
      - project
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of the repository to get.
    hidden: false
    human_readable_name: REPOSITORY
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <REPOSITORY>
    multiple: false
    name: repository
    nargs: 1
    opts:
    - repository
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name of the repository to get.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: repository
      opts:
      - repository
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Force deletion without confirmation.
    hidden: false
    human_readable_name: force
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <FORCE>
    multiple: false
    name: force
    nargs: 1
    opts:
    - --force
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: force
      opts:
      - --force
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Force deletion without confirmation.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: repository delete <PROJECT> <REPOSITORY> [OPTIONS]
- category: repository
  deprecated: false
  epilog: ''
  help: Fetch a repository.
  hidden: false
  name: repository get
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of the project the repository belongs to.
    hidden: false
    human_readable_name: PROJECT
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT>
    multiple: false
    name: project
    nargs: 1
    opts:
    - project
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name of the project the repository belongs to.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project
      opts:
      - project
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of the repository to get.
    hidden: false
    human_readable_name: REPOSITORY
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <REPOSITORY>
    multiple: false
    name: repository
    nargs: 1
    opts:
    - repository
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name of the repository to get.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: repository
      opts:
      - repository
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: repository get <PROJECT> <REPOSITORY>
- category: repository
  deprecated: false
  epilog: ''
  help: List repositories in all projects or a specific project.
  hidden: false
  name: repository list
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of project to fetch repositories from. If not specified, all projects
      will be searched.
    hidden: false
    human_readable_name: PROJECT
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT>
    multiple: false
    name: project
    nargs: 1
    opts:
    - project
    prompt: null
    prompt_required: null
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name of project to fetch repositories from. If not specified, all projects
        will be searched.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project
      opts:
      - project
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Query parameters to filter the results.
    hidden: false
    human_readable_name: query
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <QUERY>
    multiple: false
    name: query
    nargs: 1
    opts:
    - --query
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: query
      opts:
      - --query
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Query parameters to filter the results.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort by
      name ascending and id descending.'
    hidden: false
    human_readable_name: sort
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SORT>
    multiple: false
    name: sort
    nargs: 1
    opts:
    - --sort
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: sort
      opts:
      - --sort
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort
        by name ascending and id descending.'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 1
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Page to begin fetching from.
    hidden: false
    human_readable_name: page
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE>
    multiple: false
    name: page
    nargs: 1
    opts:
    - --page
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page
      opts:
      - --page
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Page to begin fetching from.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Results to fetch per API call.
    hidden: false
    human_readable_name: page_size
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE_SIZE>
    multiple: false
    name: page_size
    nargs: 1
    opts:
    - --page-size
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page_size
      opts:
      - --page-size
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Results to fetch per API call.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Maximum number of results to fetch.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LIMIT>
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: limit
      opts:
      - --limit
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Maximum number of results to fetch.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: repository list <PROJECT> [OPTIONS]
- category: repository
  deprecated: false
  epilog: ''
  help: 'Update a repository.


    As of now, only the description can be updated (if the Web UI is to be trusted).'
  hidden: false
  name: repository update
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Project name of repository to update.
    hidden: false
    human_readable_name: PROJECT
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT>
    multiple: false
    name: project
    nargs: 1
    opts:
    - project
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Project name of repository to update.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project
      opts:
      - project
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of the repository to update.
    hidden: false
    human_readable_name: REPOSITORY
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <REPOSITORY>
    multiple: false
    name: repository
    nargs: 1
    opts:
    - repository
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name of the repository to update.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: repository
      opts:
      - repository
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The description of the repository
    hidden: false
    human_readable_name: description
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <DESCRIPTION>
    multiple: false
    name: description
    nargs: 1
    opts:
    - --description
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: description
      opts:
      - --description
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The description of the repository
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: repository update <PROJECT> <REPOSITORY> [OPTIONS]
retention job:
- category: retention job
  deprecated: false
  epilog: ''
  help: List retention jobs.
  hidden: false
  name: retention job list
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Retention policy ID. Overrides positional argument.
    hidden: false
    human_readable_name: policy_id
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <POLICY_ID>
    multiple: false
    name: policy_id
    nargs: 1
    opts:
    - --id
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: policy_id
      opts:
      - --id
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Retention policy ID. Overrides positional argument.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 1
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Page to begin fetching from.
    hidden: false
    human_readable_name: page
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE>
    multiple: false
    name: page
    nargs: 1
    opts:
    - --page
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page
      opts:
      - --page
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Page to begin fetching from.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Results to fetch per API call.
    hidden: false
    human_readable_name: page_size
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE_SIZE>
    multiple: false
    name: page_size
    nargs: 1
    opts:
    - --page-size
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page_size
      opts:
      - --page-size
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Results to fetch per API call.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Maximum number of results to fetch.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LIMIT>
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: limit
      opts:
      - --limit
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Maximum number of results to fetch.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: retention job list <PROJECT_NAME_OR_ID> [OPTIONS]
- category: retention job
  deprecated: false
  epilog: ''
  help: Start a retention job.
  hidden: false
  name: retention job start
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Retention policy ID. Overrides positional argument.
    hidden: false
    human_readable_name: policy_id
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <POLICY_ID>
    multiple: false
    name: policy_id
    nargs: 1
    opts:
    - --id
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: policy_id
      opts:
      - --id
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Retention policy ID. Overrides positional argument.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Run job in dry run mode.
    hidden: false
    human_readable_name: dry_run
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <DRY_RUN>
    multiple: false
    name: dry_run
    nargs: 1
    opts:
    - --dry-run
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: dry_run
      opts:
      - --dry-run
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Run job in dry run mode.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: retention job start <PROJECT_NAME_OR_ID> [OPTIONS]
- category: retention job
  deprecated: false
  epilog: ''
  help: Stop a retention job.
  hidden: false
  name: retention job stop
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID of the job to stop.
    hidden: false
    human_readable_name: JOB_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <JOB_ID>
    multiple: false
    name: job_id
    nargs: 1
    opts:
    - job_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: ID of the job to stop.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: job_id
      opts:
      - job_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Retention policy ID. Overrides positional argument.
    hidden: false
    human_readable_name: policy_id
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <POLICY_ID>
    multiple: false
    name: policy_id
    nargs: 1
    opts:
    - --id
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: policy_id
      opts:
      - --id
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Retention policy ID. Overrides positional argument.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: retention job stop <PROJECT_NAME_OR_ID> <JOB_ID> [OPTIONS]
retention job task:
- category: retention job task
  deprecated: false
  epilog: ''
  help: List retention tasks.
  hidden: false
  name: retention job task list
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID of the job to list tasks for.
    hidden: false
    human_readable_name: JOB_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <JOB_ID>
    multiple: false
    name: job_id
    nargs: 1
    opts:
    - job_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: ID of the job to list tasks for.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: job_id
      opts:
      - job_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Retention policy ID. Overrides positional argument.
    hidden: false
    human_readable_name: policy_id
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <POLICY_ID>
    multiple: false
    name: policy_id
    nargs: 1
    opts:
    - --id
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: policy_id
      opts:
      - --id
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Retention policy ID. Overrides positional argument.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 1
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Page to begin fetching from.
    hidden: false
    human_readable_name: page
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE>
    multiple: false
    name: page
    nargs: 1
    opts:
    - --page
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page
      opts:
      - --page
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Page to begin fetching from.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Results to fetch per API call.
    hidden: false
    human_readable_name: page_size
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE_SIZE>
    multiple: false
    name: page_size
    nargs: 1
    opts:
    - --page-size
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page_size
      opts:
      - --page-size
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Results to fetch per API call.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Maximum number of results to fetch.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LIMIT>
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: limit
      opts:
      - --limit
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Maximum number of results to fetch.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: retention job task list <PROJECT_NAME_OR_ID> <JOB_ID> [OPTIONS]
- category: retention job task
  deprecated: false
  epilog: ''
  help: Get the log for a retention job task.
  hidden: false
  name: retention job task log
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID of job.
    hidden: false
    human_readable_name: JOB_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <JOB_ID>
    multiple: false
    name: job_id
    nargs: 1
    opts:
    - job_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: ID of job.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: job_id
      opts:
      - job_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID of job task.
    hidden: false
    human_readable_name: TASK_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <TASK_ID>
    multiple: false
    name: task_id
    nargs: 1
    opts:
    - task_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: ID of job task.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: task_id
      opts:
      - task_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Retention policy ID. Overrides positional argument.
    hidden: false
    human_readable_name: policy_id
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <POLICY_ID>
    multiple: false
    name: policy_id
    nargs: 1
    opts:
    - --id
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: policy_id
      opts:
      - --id
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Retention policy ID. Overrides positional argument.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: retention job task log <PROJECT_NAME_OR_ID> <JOB_ID> <TASK_ID> [OPTIONS]
retention:
- category: retention
  deprecated: false
  epilog: ''
  help: Get the metadata for retentions.
  hidden: false
  name: retention metadata
  options_metavar: '[OPTIONS]'
  params: []
  score: 0
  short_help: ''
  usage: retention metadata
retention policy:
- category: retention policy
  deprecated: false
  epilog: ''
  help: "Delete a retention policy.\n\n!!! warning\n    The user [bold]needs[/] permission\
    \ to update the project metadata\n    in addition to managing its retention policy,\
    \ due to a critical\n    API bug that will break a project if the project metadata\
    \ is not updated\n    after its retention policy is deleted."
  hidden: false
  name: retention policy delete
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Retention policy ID. Overrides positional argument.
    hidden: false
    human_readable_name: policy_id
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <POLICY_ID>
    multiple: false
    name: policy_id
    nargs: 1
    opts:
    - --id
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: policy_id
      opts:
      - --id
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Retention policy ID. Overrides positional argument.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Force deletion without confirmation.
    hidden: false
    human_readable_name: force
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <FORCE>
    multiple: false
    name: force
    nargs: 1
    opts:
    - --force
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: force
      opts:
      - --force
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Force deletion without confirmation.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: retention policy delete <PROJECT_NAME_OR_ID> [OPTIONS]
- category: retention policy
  deprecated: false
  epilog: ''
  help: Fetch a retention policy.
  hidden: false
  name: retention policy get
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Retention policy ID. Overrides positional argument.
    hidden: false
    human_readable_name: policy_id
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <POLICY_ID>
    multiple: false
    name: policy_id
    nargs: 1
    opts:
    - --id
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: policy_id
      opts:
      - --id
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Retention policy ID. Overrides positional argument.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: retention policy get <PROJECT_NAME_OR_ID> [OPTIONS]
- category: retention policy
  deprecated: false
  epilog: ''
  help: Get the retention policy ID for a project.
  hidden: false
  name: retention policy id
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: retention policy id <PROJECT_NAME_OR_ID>
scan export:
- category: scan export
  deprecated: false
  epilog: ''
  help: Download the results of a scan export job as a CSV file.
  hidden: false
  name: scan export download
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The execution ID of the scan job to download.
    hidden: false
    human_readable_name: EXECUTION_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <EXECUTION_ID>
    multiple: false
    name: execution_id
    nargs: 1
    opts:
    - execution_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The execution ID of the scan job to download.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: execution_id
      opts:
      - execution_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Destination to download the export to.
    hidden: false
    human_readable_name: DESTINATION
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <DESTINATION>
    multiple: false
    name: destination
    nargs: 1
    opts:
    - destination
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: path
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Destination to download the export to.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: destination
      opts:
      - destination
      secondary_opts: []
      type: !!python/object:click.types.Path
        exists: false
        file_okay: true
        dir_okay: true
        readable: true
        writable: false
        executable: false
        resolve_path: false
        allow_dash: false
        type: null
        name: path
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: scan export download <EXECUTION_ID> <DESTINATION>
- category: scan export
  deprecated: false
  epilog: ''
  help: Get a specific scan export.
  hidden: false
  name: scan export get
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The execution ID of the scan job to retrieve.
    hidden: false
    human_readable_name: EXECUTION_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <EXECUTION_ID>
    multiple: false
    name: execution_id
    nargs: 1
    opts:
    - execution_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The execution ID of the scan job to retrieve.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: execution_id
      opts:
      - execution_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: scan export get <EXECUTION_ID>
- category: scan export
  deprecated: false
  epilog: ''
  help: List all scan exports for the current user.
  hidden: false
  name: scan export list
  options_metavar: '[OPTIONS]'
  params: []
  score: 0
  short_help: ''
  usage: scan export list
- category: scan export
  deprecated: false
  epilog: ''
  help: "Start a scan export job.\n\nReturns an execution ID that can be used to download\
    \ the export once it is finished\nusing [bold green]harbor scan export download[/]\n\
    \n!!! warning\n    The official documentation for this endpoint is poor, and as\
    \ such, this command might not work as intended."
  hidden: false
  name: scan export start
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Custom name for export job.
    hidden: false
    human_readable_name: job_name
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <JOB_NAME>
    multiple: false
    name: job_name
    nargs: 1
    opts:
    - --name
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: job_name
      opts:
      - --name
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Custom name for export job.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: []
    envvar: null
    expose_value: true
    flag_value: true
    help: CVE(s) to export
    hidden: false
    human_readable_name: cve
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <CVE,[CVE...]>
    multiple: true
    name: cve
    nargs: 1
    opts:
    - --cve
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: cve
      opts:
      - --cve
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: 1
      multiple: true
      expose_value: true
      default: []
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: CVE(s) to export
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default:
    - '**'
    envvar: null
    expose_value: true
    flag_value: false
    help: Names of tag(s) to include in the export. Supports wildcards ([bold magenta]'tag*'[/],
      [bold magenta]'**'[/]). Defaults to all tags ([bold magenta]'**'[/])
    hidden: false
    human_readable_name: tag
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <TAG,[TAG...]>
    multiple: true
    name: tag
    nargs: 1
    opts:
    - --tag
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: tag
      opts:
      - --tag
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: 1
      multiple: true
      expose_value: true
      default:
      - '**'
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: Names of tag(s) to include in the export. Supports wildcards ([bold magenta]'tag*'[/],
        [bold magenta]'**'[/]). Defaults to all tags ([bold magenta]'**'[/])
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: []
    envvar: null
    expose_value: true
    flag_value: true
    help: IDs of specific label(s) to include in the export.
    hidden: false
    human_readable_name: label
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LABEL,[LABEL...]>
    multiple: true
    name: label
    nargs: 1
    opts:
    - --label
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: label
      opts:
      - --label
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist_int ''
      nargs: 1
      multiple: true
      expose_value: true
      default: []
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: IDs of specific label(s) to include in the export.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default:
    - '**'
    envvar: null
    expose_value: true
    flag_value: false
    help: Names of repo(s) to include in the export. Supports wildcards ([bold magenta]'repo*'[/],
      [bold magenta]'**'[/]). Defaults to all repos ([bold magenta]'**'[/])
    hidden: false
    human_readable_name: repo
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <REPO,[REPO...]>
    multiple: true
    name: repo
    nargs: 1
    opts:
    - --repo
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: repo
      opts:
      - --repo
      secondary_opts: []
      type: *id001
      required: false
      callback: !!python/name:harbor_cli.utils.args.parse_commalist ''
      nargs: 1
      multiple: true
      expose_value: true
      default:
      - '**'
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: Names of repo(s) to include in the export. Supports wildcards ([bold magenta]'repo*'[/],
        [bold magenta]'**'[/]). Defaults to all repos ([bold magenta]'**'[/])
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Name or ID of project to include in the export.
    hidden: false
    human_readable_name: project
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PROJECT>
    multiple: false
    name: project
    nargs: 1
    opts:
    - --project
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: project
      opts:
      - --project
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Name or ID of project to include in the export.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: application/vnd.security.vulnerability.report; version=1.1
    envvar: null
    expose_value: true
    flag_value: false
    help: The type of scan to export. Should not be changed unless you know what you
      are doing.
    hidden: false
    human_readable_name: scan_type
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SCAN_TYPE>
    multiple: false
    name: scan_type
    nargs: 1
    opts:
    - --scan-type
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: scan_type
      opts:
      - --scan-type
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: application/vnd.security.vulnerability.report; version=1.1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: The type of scan to export. Should not be changed unless you know what
        you are doing.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: scan export start [OPTIONS]
scan:
- category: scan
  deprecated: false
  epilog: ''
  help: Get the log for a specific scan report.
  hidden: false
  name: scan log
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
      Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
    hidden: false
    human_readable_name: ARTIFACT
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <ARTIFACT>
    multiple: false
    name: artifact
    nargs: 1
    opts:
    - artifact
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
        Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: artifact
      opts:
      - artifact
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID of the report to retrieve logs of.
    hidden: false
    human_readable_name: REPORT_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <REPORT_ID>
    multiple: false
    name: report_id
    nargs: 1
    opts:
    - report_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: ID of the report to retrieve logs of.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: report_id
      opts:
      - report_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: scan log <ARTIFACT> <REPORT_ID>
- category: scan
  deprecated: false
  epilog: ''
  help: Start scanning an artifact.
  hidden: false
  name: scan start
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
      Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
    hidden: false
    human_readable_name: ARTIFACT
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <ARTIFACT>
    multiple: false
    name: artifact
    nargs: 1
    opts:
    - artifact
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
        Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: artifact
      opts:
      - artifact
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: scan start <ARTIFACT>
- category: scan
  deprecated: false
  epilog: ''
  help: Stop scanning an artifact.
  hidden: false
  name: scan stop
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
      Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
    hidden: false
    human_readable_name: ARTIFACT
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <ARTIFACT>
    multiple: false
    name: artifact
    nargs: 1
    opts:
    - artifact
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: 'Name of the artifact in the format [bold magenta]''PROJECT/REPOSITORY{:tag,@sha256:digest}''[/].
        Example: [bold magenta]''library/nginx:latest''[/] or [bold magenta]''library/nginx@sha256:1234''[/].'
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: artifact
      opts:
      - artifact
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: scan stop <ARTIFACT>
scan-all:
- category: scan-all
  deprecated: false
  epilog: ''
  help: Get metrics for all 'Scan All' jobs.
  hidden: false
  name: scan-all metrics
  options_metavar: '[OPTIONS]'
  params: []
  score: 0
  short_help: ''
  usage: scan-all metrics
- category: scan-all
  deprecated: false
  epilog: ''
  help: Stop the currently running 'Scan All' job.
  hidden: false
  name: scan-all stop
  options_metavar: '[OPTIONS]'
  params: []
  score: 0
  short_help: ''
  usage: scan-all stop
scan-all schedule:
- category: scan-all schedule
  deprecated: false
  epilog: ''
  help: ''
  hidden: false
  name: scan-all schedule create
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'The schedule type. The valid values are ''Hourly'', ''Daily'', ''Weekly'',
      ''Custom'', ''Manual'', ''None'' and ''Schedule''.

      ''Manual'' means to trigger it right away, ''Schedule'' means to trigger it
      by a specified cron schedule and

      ''None'' means to cancel the schedule.'
    hidden: false
    human_readable_name: type
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <TYPE>
    multiple: false
    name: type
    nargs: 1
    opts:
    - --type
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: type
      opts:
      - --type
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'The schedule type. The valid values are ''Hourly'', ''Daily'', ''Weekly'',
        ''Custom'', ''Manual'', ''None'' and ''Schedule''.

        ''Manual'' means to trigger it right away, ''Schedule'' means to trigger it
        by a specified cron schedule and

        ''None'' means to cancel the schedule.'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: A cron expression, a time-based job scheduler.
    hidden: false
    human_readable_name: cron
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <CRON>
    multiple: false
    name: cron
    nargs: 1
    opts:
    - --cron
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: cron
      opts:
      - --cron
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: A cron expression, a time-based job scheduler.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: scan-all schedule create [OPTIONS]
- category: scan-all schedule
  deprecated: false
  epilog: ''
  help: Get the current 'Scan All' schedule.
  hidden: false
  name: scan-all schedule get
  options_metavar: '[OPTIONS]'
  params: []
  score: 0
  short_help: ''
  usage: scan-all schedule get
- category: scan-all schedule
  deprecated: false
  epilog: ''
  help: ''
  hidden: false
  name: scan-all schedule update
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'The schedule type. The valid values are ''Hourly'', ''Daily'', ''Weekly'',
      ''Custom'', ''Manual'', ''None'' and ''Schedule''.

      ''Manual'' means to trigger it right away, ''Schedule'' means to trigger it
      by a specified cron schedule and

      ''None'' means to cancel the schedule.'
    hidden: false
    human_readable_name: type
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <TYPE>
    multiple: false
    name: type
    nargs: 1
    opts:
    - --type
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: type
      opts:
      - --type
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'The schedule type. The valid values are ''Hourly'', ''Daily'', ''Weekly'',
        ''Custom'', ''Manual'', ''None'' and ''Schedule''.

        ''Manual'' means to trigger it right away, ''Schedule'' means to trigger it
        by a specified cron schedule and

        ''None'' means to cancel the schedule.'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: A cron expression, a time-based job scheduler.
    hidden: false
    human_readable_name: cron
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <CRON>
    multiple: false
    name: cron
    nargs: 1
    opts:
    - --cron
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: cron
      opts:
      - --cron
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: A cron expression, a time-based job scheduler.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: scan-all schedule update [OPTIONS]
scanner:
- category: scanner
  deprecated: false
  epilog: ''
  help: Create a new scanner.
  hidden: false
  name: scanner create
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The name of this registration
    hidden: false
    human_readable_name: NAME
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <NAME>
    multiple: false
    name: name
    nargs: 1
    opts:
    - name
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The name of this registration
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: name
      opts:
      - name
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: A base URL of the scanner adapter.
    hidden: false
    human_readable_name: URL
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <URL>
    multiple: false
    name: url
    nargs: 1
    opts:
    - url
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: A base URL of the scanner adapter.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: url
      opts:
      - url
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: An optional description of this registration.
    hidden: false
    human_readable_name: description
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <DESCRIPTION>
    multiple: false
    name: description
    nargs: 1
    opts:
    - --description
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: description
      opts:
      - --description
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: An optional description of this registration.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'Specify what authentication approach is adopted for the HTTP communications.

      Supported types Basic", "Bearer" and api key header "X-ScannerAdapter-API-Key"'
    hidden: false
    human_readable_name: auth
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <AUTH>
    multiple: false
    name: auth
    nargs: 1
    opts:
    - --auth
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: auth
      opts:
      - --auth
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'Specify what authentication approach is adopted for the HTTP communications.

        Supported types Basic", "Bearer" and api key header "X-ScannerAdapter-API-Key"'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: An optional value of the HTTP Authorization header sent with each request
      to the Scanner Adapter API.
    hidden: false
    human_readable_name: access_credential
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <ACCESS_CREDENTIAL>
    multiple: false
    name: access_credential
    nargs: 1
    opts:
    - --access-credential
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: access_credential
      opts:
      - --access-credential
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: An optional value of the HTTP Authorization header sent with each request
        to the Scanner Adapter API.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Indicate if skip the certificate verification when sending HTTP requests
    hidden: false
    human_readable_name: skip_cert_verify
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SKIP_CERT_VERIFY>
    multiple: false
    name: skip_cert_verify
    nargs: 1
    opts:
    - --skip-cert-verify
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: skip_cert_verify
      opts:
      - --skip-cert-verify
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Indicate if skip the certificate verification when sending HTTP requests
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Indicate whether use internal registry addr for the scanner to pull content
      or not
    hidden: false
    human_readable_name: use_internal_addr
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <USE_INTERNAL_ADDR>
    multiple: false
    name: use_internal_addr
    nargs: 1
    opts:
    - --use-internal-addr
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: use_internal_addr
      opts:
      - --use-internal-addr
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Indicate whether use internal registry addr for the scanner to pull content
        or not
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Indicate whether the registration is enabled or not
    hidden: false
    human_readable_name: disabled
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <DISABLED>
    multiple: false
    name: disabled
    nargs: 1
    opts:
    - --disabled
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: disabled
      opts:
      - --disabled
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Indicate whether the registration is enabled or not
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: scanner create <NAME> <URL> [OPTIONS]
- category: scanner
  deprecated: false
  epilog: ''
  help: Set/unset default scanner.
  hidden: false
  name: scanner default
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID of the scanner to set as default.
    hidden: false
    human_readable_name: SCANNER_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <SCANNER_ID>
    multiple: false
    name: scanner_id
    nargs: 1
    opts:
    - scanner_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: ID of the scanner to set as default.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: scanner_id
      opts:
      - scanner_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Unset the given scanner as default.
    hidden: false
    human_readable_name: unset_default
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <UNSET_DEFAULT>
    multiple: false
    name: unset_default
    nargs: 1
    opts:
    - --unset
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: unset_default
      opts:
      - --unset
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Unset the given scanner as default.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: scanner default <SCANNER_ID> [OPTIONS]
- category: scanner
  deprecated: false
  epilog: ''
  help: Delete a scanner.
  hidden: false
  name: scanner delete
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID of the scanner to delete.
    hidden: false
    human_readable_name: SCANNER_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <SCANNER_ID>
    multiple: false
    name: scanner_id
    nargs: 1
    opts:
    - scanner_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: ID of the scanner to delete.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: scanner_id
      opts:
      - scanner_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Force deletion without confirmation.
    hidden: false
    human_readable_name: force
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <FORCE>
    multiple: false
    name: force
    nargs: 1
    opts:
    - --force
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: force
      opts:
      - --force
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Force deletion without confirmation.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: scanner delete <SCANNER_ID> [OPTIONS]
- category: scanner
  deprecated: false
  epilog: ''
  help: Get a specific scanner.
  hidden: false
  name: scanner get
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID of the scanner to retrieve.
    hidden: false
    human_readable_name: SCANNER_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <SCANNER_ID>
    multiple: false
    name: scanner_id
    nargs: 1
    opts:
    - scanner_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: ID of the scanner to retrieve.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: scanner_id
      opts:
      - scanner_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: scanner get <SCANNER_ID>
- category: scanner
  deprecated: false
  epilog: ''
  help: List scanners.
  hidden: false
  name: scanner list
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Query parameters to filter the results.
    hidden: false
    human_readable_name: query
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <QUERY>
    multiple: false
    name: query
    nargs: 1
    opts:
    - --query
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: query
      opts:
      - --query
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Query parameters to filter the results.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort by
      name ascending and id descending.'
    hidden: false
    human_readable_name: sort
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SORT>
    multiple: false
    name: sort
    nargs: 1
    opts:
    - --sort
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: sort
      opts:
      - --sort
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort
        by name ascending and id descending.'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 1
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Page to begin fetching from.
    hidden: false
    human_readable_name: page
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE>
    multiple: false
    name: page
    nargs: 1
    opts:
    - --page
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page
      opts:
      - --page
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Page to begin fetching from.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Results to fetch per API call.
    hidden: false
    human_readable_name: page_size
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE_SIZE>
    multiple: false
    name: page_size
    nargs: 1
    opts:
    - --page-size
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page_size
      opts:
      - --page-size
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Results to fetch per API call.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Maximum number of results to fetch.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LIMIT>
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: limit
      opts:
      - --limit
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Maximum number of results to fetch.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: scanner list [OPTIONS]
- category: scanner
  deprecated: false
  epilog: ''
  help: Update a scanner.
  hidden: false
  name: scanner update
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID of the scanner to update.
    hidden: false
    human_readable_name: SCANNER_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <SCANNER_ID>
    multiple: false
    name: scanner_id
    nargs: 1
    opts:
    - scanner_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: ID of the scanner to update.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: scanner_id
      opts:
      - scanner_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The name of this registration
    hidden: false
    human_readable_name: name
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <NAME>
    multiple: false
    name: name
    nargs: 1
    opts:
    - --name
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: name
      opts:
      - --name
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The name of this registration
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: A base URL of the scanner adapter.
    hidden: false
    human_readable_name: url
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <URL>
    multiple: false
    name: url
    nargs: 1
    opts:
    - --url
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: url
      opts:
      - --url
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: A base URL of the scanner adapter.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: An optional description of this registration.
    hidden: false
    human_readable_name: description
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <DESCRIPTION>
    multiple: false
    name: description
    nargs: 1
    opts:
    - --description
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: description
      opts:
      - --description
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: An optional description of this registration.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'Specify what authentication approach is adopted for the HTTP communications.

      Supported types Basic", "Bearer" and api key header "X-ScannerAdapter-API-Key"'
    hidden: false
    human_readable_name: auth
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <AUTH>
    multiple: false
    name: auth
    nargs: 1
    opts:
    - --auth
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: auth
      opts:
      - --auth
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'Specify what authentication approach is adopted for the HTTP communications.

        Supported types Basic", "Bearer" and api key header "X-ScannerAdapter-API-Key"'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: An optional value of the HTTP Authorization header sent with each request
      to the Scanner Adapter API.
    hidden: false
    human_readable_name: access_credential
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <ACCESS_CREDENTIAL>
    multiple: false
    name: access_credential
    nargs: 1
    opts:
    - --access-credential
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: access_credential
      opts:
      - --access-credential
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: An optional value of the HTTP Authorization header sent with each request
        to the Scanner Adapter API.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Indicate if skip the certificate verification when sending HTTP requests
    hidden: false
    human_readable_name: skip_cert_verify
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SKIP_CERT_VERIFY>
    multiple: false
    name: skip_cert_verify
    nargs: 1
    opts:
    - --skip-cert-verify
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: skip_cert_verify
      opts:
      - --skip-cert-verify
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Indicate if skip the certificate verification when sending HTTP requests
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Indicate whether use internal registry addr for the scanner to pull content
      or not
    hidden: false
    human_readable_name: use_internal_addr
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <USE_INTERNAL_ADDR>
    multiple: false
    name: use_internal_addr
    nargs: 1
    opts:
    - --use-internal-addr
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: use_internal_addr
      opts:
      - --use-internal-addr
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Indicate whether use internal registry addr for the scanner to pull content
        or not
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Indicate whether the registration is enabled or not
    hidden: false
    human_readable_name: disabled
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <DISABLED>
    multiple: false
    name: disabled
    nargs: 1
    opts:
    - --disabled
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: disabled
      opts:
      - --disabled
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Indicate whether the registration is enabled or not
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: scanner update <SCANNER_ID> [OPTIONS]
self config:
- category: self config
  deprecated: false
  epilog: ''
  help: Show active Harbor CLI environment variables.
  hidden: false
  name: self config env
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: List all environment variables.
    hidden: false
    human_readable_name: all
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <ALL>
    multiple: false
    name: all
    nargs: 1
    opts:
    - -a
    - --all
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: all
      opts:
      - -a
      - --all
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: List all environment variables.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: self config env [OPTIONS]
- category: self config
  deprecated: false
  epilog: ''
  help: Show the current CLI configuration.
  hidden: false
  name: self config get
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Specific config key to get value of.
    hidden: false
    human_readable_name: KEY
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <KEY>
    multiple: false
    name: key
    nargs: 1
    opts:
    - key
    prompt: null
    prompt_required: null
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Specific config key to get value of.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: key
      opts:
      - key
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: true
    envvar: null
    expose_value: true
    flag_value: false
    help: Show the current configuration in TOML format after setting the value. Overrides
      --format.
    hidden: false
    human_readable_name: as_toml
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <AS_TOML>
    multiple: false
    name: as_toml
    nargs: 1
    opts:
    - --toml
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-toml
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: as_toml
      opts:
      - --toml
      secondary_opts:
      - --no-toml
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: true
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: Show the current configuration in TOML format after setting the value.
        Overrides --format.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: self config get <KEY> [OPTIONS]
- category: self config
  deprecated: false
  epilog: ''
  help: Show all config keys that can be modified with [bold green]set[/].
  hidden: false
  name: self config keys
  options_metavar: '[OPTIONS]'
  params: []
  score: 0
  short_help: ''
  usage: self config keys
- category: self config
  deprecated: false
  epilog: ''
  help: Show the path to the current configuration file, or default path if no config
    is loaded.
  hidden: false
  name: self config path
  options_metavar: '[OPTIONS]'
  params: []
  score: 0
  short_help: ''
  usage: self config path
- category: self config
  deprecated: false
  epilog: ''
  help: Modify a CLI configuration value. Use [bold green]keys[/] to see all available
    keys.
  hidden: false
  name: self config set
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Key to set. Subkeys can be specified using dot notation. e.g. [green]'harbor.url'[/]
    hidden: false
    human_readable_name: KEY
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <KEY>
    multiple: false
    name: key
    nargs: 1
    opts:
    - key
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Key to set. Subkeys can be specified using dot notation. e.g. [green]'harbor.url'[/]
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: key
      opts:
      - key
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Value to set.
    hidden: false
    human_readable_name: VALUE
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <VALUE>
    multiple: false
    name: value
    nargs: 1
    opts:
    - value
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Value to set.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: value
      opts:
      - value
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Path to save configuration file.
    hidden: false
    human_readable_name: path
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PATH>
    multiple: false
    name: path
    nargs: 1
    opts:
    - --path
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: path
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: path
      opts:
      - --path
      secondary_opts: []
      type: !!python/object:click.types.Path
        exists: false
        file_okay: true
        dir_okay: true
        readable: true
        writable: false
        executable: false
        resolve_path: false
        allow_dash: false
        type: null
        name: path
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Path to save configuration file.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Set the value in the current session only. The value will not be saved to
      disk. Only useful in REPL mode.
    hidden: false
    human_readable_name: session
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <SESSION>
    multiple: false
    name: session
    nargs: 1
    opts:
    - --session
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: session
      opts:
      - --session
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Set the value in the current session only. The value will not be saved
        to disk. Only useful in REPL mode.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Show the current configuration after setting the value.
    hidden: false
    human_readable_name: show_config
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <SHOW_CONFIG>
    multiple: false
    name: show_config
    nargs: 1
    opts:
    - --show
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-show
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: show_config
      opts:
      - --show
      secondary_opts:
      - --no-show
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Show the current configuration after setting the value.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: true
    envvar: null
    expose_value: true
    flag_value: false
    help: Render updated config as TOML in terminal if [green]--show[/] is set. Overrides
      global option [green]--format[/].
    hidden: false
    human_readable_name: as_toml
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <AS_TOML>
    multiple: false
    name: as_toml
    nargs: 1
    opts:
    - --toml
    prompt: null
    prompt_required: true
    required: false
    secondary_opts:
    - --no-toml
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: as_toml
      opts:
      - --toml
      secondary_opts:
      - --no-toml
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: true
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: Render updated config as TOML in terminal if [green]--show[/] is set.
        Overrides global option [green]--format[/].
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: self config set <KEY> <VALUE> [OPTIONS]
- category: self config
  deprecated: false
  epilog: ''
  help: Write the current [bold]session[/] configuration to disk. Used to save changes
    made with [bold green]set --session[/] in REPL mode.
  hidden: false
  name: self config write
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Path to save configuration file. Uses current config file path if not specified.
    hidden: false
    human_readable_name: path
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PATH>
    multiple: false
    name: path
    nargs: 1
    opts:
    - --path
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: path
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: path
      opts:
      - --path
      secondary_opts: []
      type: !!python/object:click.types.Path
        exists: false
        file_okay: true
        dir_okay: true
        readable: true
        writable: false
        executable: false
        resolve_path: false
        allow_dash: false
        type: null
        name: path
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Path to save configuration file. Uses current config file path if not
        specified.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: Write the current session configuration to disk.
  usage: self config write [OPTIONS]
self keyring:
- category: self keyring
  deprecated: false
  epilog: ''
  help: Show the current keyring backend and its status.
  hidden: false
  name: self keyring status
  options_metavar: '[OPTIONS]'
  params: []
  score: 0
  short_help: ''
  usage: self keyring status
system:
- category: system
  deprecated: false
  epilog: ''
  help: Get system health.
  hidden: false
  name: system health
  options_metavar: '[OPTIONS]'
  params: []
  score: 0
  short_help: ''
  usage: system health
- category: system
  deprecated: false
  epilog: ''
  help: Get information about the system.
  hidden: false
  name: system info
  options_metavar: '[OPTIONS]'
  params: []
  score: 0
  short_help: ''
  usage: system info
- category: system
  deprecated: false
  epilog: ''
  help: Ping the harbor server. Returns the time it took to ping the server in milliseconds.
  hidden: false
  name: system ping
  options_metavar: '[OPTIONS]'
  params: []
  score: 0
  short_help: ''
  usage: system ping
- category: system
  deprecated: false
  epilog: ''
  help: Get statistics about the system.
  hidden: false
  name: system statistics
  options_metavar: '[OPTIONS]'
  params: []
  score: 0
  short_help: ''
  usage: system statistics
- category: system
  deprecated: false
  epilog: ''
  help: Get information about the system volumes.
  hidden: false
  name: system volumes
  options_metavar: '[OPTIONS]'
  params: []
  score: 0
  short_help: ''
  usage: system volumes
user:
- category: user
  deprecated: false
  epilog: ''
  help: Create a new user.
  hidden: false
  name: user create
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Username of the user to create.
    hidden: false
    human_readable_name: USERNAME
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <USERNAME>
    multiple: false
    name: username
    nargs: 1
    opts:
    - username
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Username of the user to create.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: username
      opts:
      - username
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Password for user.
    hidden: false
    human_readable_name: password
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PASSWORD>
    multiple: false
    name: password
    nargs: 1
    opts:
    - --password
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: password
      opts:
      - --password
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Password for user.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Email for user.
    hidden: false
    human_readable_name: email
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <EMAIL>
    multiple: false
    name: email
    nargs: 1
    opts:
    - --email
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: email
      opts:
      - --email
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Email for user.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Real name of user. Enclose multiple names in quotes.
    hidden: false
    human_readable_name: realname
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <REALNAME>
    multiple: false
    name: realname
    nargs: 1
    opts:
    - --realname
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: realname
      opts:
      - --realname
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Real name of user. Enclose multiple names in quotes.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Comment for user.
    hidden: false
    human_readable_name: comment
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <COMMENT>
    multiple: false
    name: comment
    nargs: 1
    opts:
    - --comment
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: comment
      opts:
      - --comment
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Comment for user.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: user create <USERNAME> [OPTIONS]
- category: user
  deprecated: false
  epilog: ''
  help: Delete a user.
  hidden: false
  name: user delete
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Username or ID of the user to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: USERNAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <USERNAME_OR_ID>
    multiple: false
    name: username_or_id
    nargs: 1
    opts:
    - username_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Username or ID of the user to use. Prefix with [bold magenta]'id:'[/]
        to specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: username_or_id
      opts:
      - username_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Force deletion without confirmation.
    hidden: false
    human_readable_name: force
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <FORCE>
    multiple: false
    name: force
    nargs: 1
    opts:
    - --force
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: force
      opts:
      - --force
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Force deletion without confirmation.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: user delete <USERNAME_OR_ID> [OPTIONS]
- category: user
  deprecated: false
  epilog: ''
  help: Get information about a specific user.
  hidden: false
  name: user get
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Username or ID of the user to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: USERNAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <USERNAME_OR_ID>
    multiple: false
    name: username_or_id
    nargs: 1
    opts:
    - username_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Username or ID of the user to use. Prefix with [bold magenta]'id:'[/]
        to specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: username_or_id
      opts:
      - username_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: user get <USERNAME_OR_ID>
- category: user
  deprecated: false
  epilog: ''
  help: Get information about the currently authenticated user.
  hidden: false
  name: user get-current
  options_metavar: '[OPTIONS]'
  params: []
  score: 0
  short_help: ''
  usage: user get-current
- category: user
  deprecated: false
  epilog: ''
  help: Get permissions for the currently authenticated user.
  hidden: false
  name: user get-current-permissions
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Scope to get permissions for.
    hidden: false
    human_readable_name: scope
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SCOPE>
    multiple: false
    name: scope
    nargs: 1
    opts:
    - --scope
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: scope
      opts:
      - --scope
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Scope to get permissions for.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Show permissions relative to scope.
    hidden: false
    human_readable_name: relative
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <RELATIVE>
    multiple: false
    name: relative
    nargs: 1
    opts:
    - --relative
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: relative
      opts:
      - --relative
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Show permissions relative to scope.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: user get-current-permissions [OPTIONS]
- category: user
  deprecated: false
  epilog: ''
  help: List all users in the system.
  hidden: false
  name: user list
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Query parameters to filter the results.
    hidden: false
    human_readable_name: query
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <QUERY>
    multiple: false
    name: query
    nargs: 1
    opts:
    - --query
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: query
      opts:
      - --query
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Query parameters to filter the results.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices:
    - id
    - username
    - name
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Sort by field.
    hidden: false
    human_readable_name: sort
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SORT>
    multiple: false
    name: sort
    nargs: 1
    opts:
    - --sort
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: sort
      opts:
      - --sort
      secondary_opts: []
      type: !!python/object:click.types.Choice
        choices:
        - id
        - username
        - name
        case_sensitive: false
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Sort by field.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 1
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Page to begin fetching from.
    hidden: false
    human_readable_name: page
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE>
    multiple: false
    name: page
    nargs: 1
    opts:
    - --page
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page
      opts:
      - --page
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Page to begin fetching from.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Results to fetch per API call.
    hidden: false
    human_readable_name: page_size
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE_SIZE>
    multiple: false
    name: page_size
    nargs: 1
    opts:
    - --page-size
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page_size
      opts:
      - --page-size
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Results to fetch per API call.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Maximum number of results to fetch.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LIMIT>
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: limit
      opts:
      - --limit
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Maximum number of results to fetch.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: user list [OPTIONS]
- category: user
  deprecated: false
  epilog: ''
  help: Search for users by username.
  hidden: false
  name: user search
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 1
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Page to begin fetching from.
    hidden: false
    human_readable_name: page
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE>
    multiple: false
    name: page
    nargs: 1
    opts:
    - --page
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page
      opts:
      - --page
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Page to begin fetching from.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Results to fetch per API call.
    hidden: false
    human_readable_name: page_size
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE_SIZE>
    multiple: false
    name: page_size
    nargs: 1
    opts:
    - --page-size
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page_size
      opts:
      - --page-size
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Results to fetch per API call.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Maximum number of results to fetch.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LIMIT>
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: limit
      opts:
      - --limit
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Maximum number of results to fetch.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Username or partial username to search for.
    hidden: false
    human_readable_name: USERNAME
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <USERNAME>
    multiple: false
    name: username
    nargs: 1
    opts:
    - username
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Username or partial username to search for.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: username
      opts:
      - username
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: user search <USERNAME> [OPTIONS]
- category: user
  deprecated: false
  epilog: ''
  help: Sets a user as admin.
  hidden: false
  name: user set-admin
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Username or ID of the user to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: USERNAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <USERNAME_OR_ID>
    multiple: false
    name: username_or_id
    nargs: 1
    opts:
    - username_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Username or ID of the user to use. Prefix with [bold magenta]'id:'[/]
        to specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: username_or_id
      opts:
      - username_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: user set-admin <USERNAME_OR_ID>
- category: user
  deprecated: false
  epilog: ''
  help: Set a user's CLI secret.
  hidden: false
  name: user set-cli-secret
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Username or ID of the user to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: USERNAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <USERNAME_OR_ID>
    multiple: false
    name: username_or_id
    nargs: 1
    opts:
    - username_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Username or ID of the user to use. Prefix with [bold magenta]'id:'[/]
        to specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: username_or_id
      opts:
      - username_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: true
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: CLI secret to set for user. If omitted, a prompt will be shown.
    hidden: false
    human_readable_name: secret
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SECRET>
    multiple: false
    name: secret
    nargs: 1
    opts:
    - --secret
    prompt: Enter CLI secret
    prompt_required: true
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: secret
      opts:
      - --secret
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: Enter CLI secret
      confirmation_prompt: true
      prompt_required: true
      hide_input: true
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: CLI secret to set for user. If omitted, a prompt will be shown.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: user set-cli-secret <USERNAME_OR_ID> --secret <SECRET>
- category: user
  deprecated: false
  epilog: ''
  help: Set a user's password.
  hidden: false
  name: user set-password
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Username or ID of the user to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: USERNAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <USERNAME_OR_ID>
    multiple: false
    name: username_or_id
    nargs: 1
    opts:
    - username_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Username or ID of the user to use. Prefix with [bold magenta]'id:'[/]
        to specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: username_or_id
      opts:
      - username_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Old password for user. Prompted if not provided.
    hidden: false
    human_readable_name: old_password
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <OLD_PASSWORD>
    multiple: false
    name: old_password
    nargs: 1
    opts:
    - --old-password
    prompt: Enter old password
    prompt_required: true
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: old_password
      opts:
      - --old-password
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: Enter old password
      confirmation_prompt: false
      prompt_required: true
      hide_input: true
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Old password for user. Prompted if not provided.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: true
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: New password for user. Prompted if not provided.
    hidden: false
    human_readable_name: new_password
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <NEW_PASSWORD>
    multiple: false
    name: new_password
    nargs: 1
    opts:
    - --new-password
    prompt: Enter new password
    prompt_required: true
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: new_password
      opts:
      - --new-password
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: Enter new password
      confirmation_prompt: true
      prompt_required: true
      hide_input: true
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: New password for user. Prompted if not provided.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: user set-password <USERNAME_OR_ID> --old-password <OLD_PASSWORD> --new-password
    <NEW_PASSWORD>
- category: user
  deprecated: false
  epilog: ''
  help: Unsets a user as admin.
  hidden: false
  name: user unset-admin
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Username or ID of the user to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: USERNAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <USERNAME_OR_ID>
    multiple: false
    name: username_or_id
    nargs: 1
    opts:
    - username_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Username or ID of the user to use. Prefix with [bold magenta]'id:'[/]
        to specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: username_or_id
      opts:
      - username_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: user unset-admin <USERNAME_OR_ID>
- category: user
  deprecated: false
  epilog: ''
  help: Update an existing user.
  hidden: false
  name: user update
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Username or ID of the user to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: USERNAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <USERNAME_OR_ID>
    multiple: false
    name: username_or_id
    nargs: 1
    opts:
    - username_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Username or ID of the user to use. Prefix with [bold magenta]'id:'[/]
        to specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: username_or_id
      opts:
      - username_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: New email for the user.
    hidden: false
    human_readable_name: email
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <EMAIL>
    multiple: false
    name: email
    nargs: 1
    opts:
    - --email
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: email
      opts:
      - --email
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: New email for the user.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: New real name for the user.
    hidden: false
    human_readable_name: realname
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <REALNAME>
    multiple: false
    name: realname
    nargs: 1
    opts:
    - --realname
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: realname
      opts:
      - --realname
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: New real name for the user.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: New comment for the user.
    hidden: false
    human_readable_name: comment
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <COMMENT>
    multiple: false
    name: comment
    nargs: 1
    opts:
    - --comment
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: comment
      opts:
      - --comment
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: New comment for the user.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: user update <USERNAME_OR_ID> [OPTIONS]
usergroup:
- category: usergroup
  deprecated: false
  epilog: ''
  help: Create a user group.
  hidden: false
  name: usergroup create
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of the group to create.
    hidden: false
    human_readable_name: GROUP_NAME
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <GROUP_NAME>
    multiple: false
    name: group_name
    nargs: 1
    opts:
    - group_name
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name of the group to create.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: group_name
      opts:
      - group_name
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices:
    - LDAP
    - HTTP
    - OIDC
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: The type of user group to create.
    hidden: false
    human_readable_name: GROUP_TYPE
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <GROUP_TYPE>
    multiple: false
    name: group_type
    nargs: 1
    opts:
    - group_type
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: choice
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: The type of user group to create.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: group_type
      opts:
      - group_type
      secondary_opts: []
      type: !!python/object:click.types.Choice
        choices:
        - LDAP
        - HTTP
        - OIDC
        case_sensitive: true
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: The DN of the LDAP group if group type is LDAP
    hidden: false
    human_readable_name: ldap_group_dn
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_GROUP_DN>
    multiple: false
    name: ldap_group_dn
    nargs: 1
    opts:
    - --ldap-group-dn
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_group_dn
      opts:
      - --ldap-group-dn
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: The DN of the LDAP group if group type is LDAP
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: usergroup create <GROUP_NAME> <GROUP_TYPE> [OPTIONS]
- category: usergroup
  deprecated: false
  epilog: ''
  help: Delete a user group.
  hidden: false
  name: usergroup delete
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID of the user group to delete.
    hidden: false
    human_readable_name: GROUP_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <GROUP_ID>
    multiple: false
    name: group_id
    nargs: 1
    opts:
    - group_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: ID of the user group to delete.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: group_id
      opts:
      - group_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: false
    envvar: null
    expose_value: true
    flag_value: true
    help: Force deletion without confirmation.
    hidden: false
    human_readable_name: force
    is_argument: false
    is_eager: false
    is_bool_flag: true
    is_flag: true
    is_option: null
    max: null
    min: null
    metavar: <FORCE>
    multiple: false
    name: force
    nargs: 1
    opts:
    - --force
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: boolean
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: force
      opts:
      - --force
      secondary_opts: []
      type: *id003
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: false
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: true
      is_bool_flag: true
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Force deletion without confirmation.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: usergroup delete <GROUP_ID> [OPTIONS]
- category: usergroup
  deprecated: false
  epilog: ''
  help: Get a user group.
  hidden: false
  name: usergroup get
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID of the group to fetch.
    hidden: false
    human_readable_name: GROUP_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <GROUP_ID>
    multiple: false
    name: group_id
    nargs: 1
    opts:
    - group_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: ID of the group to fetch.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: group_id
      opts:
      - group_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: usergroup get <GROUP_ID>
- category: usergroup
  deprecated: false
  epilog: ''
  help: List user groups.
  hidden: false
  name: usergroup list
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: LDAP group DN to filter by.
    hidden: false
    human_readable_name: ldap_group_dn
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LDAP_GROUP_DN>
    multiple: false
    name: ldap_group_dn
    nargs: 1
    opts:
    - --ldap-group-dn
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: ldap_group_dn
      opts:
      - --ldap-group-dn
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: LDAP group DN to filter by.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Group name to filter by (fuzzy matching).
    hidden: false
    human_readable_name: group_name
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <GROUP_NAME>
    multiple: false
    name: group_name
    nargs: 1
    opts:
    - --group-name
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: group_name
      opts:
      - --group-name
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Group name to filter by (fuzzy matching).
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 1
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Page to begin fetching from.
    hidden: false
    human_readable_name: page
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE>
    multiple: false
    name: page
    nargs: 1
    opts:
    - --page
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page
      opts:
      - --page
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Page to begin fetching from.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Results to fetch per API call.
    hidden: false
    human_readable_name: page_size
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE_SIZE>
    multiple: false
    name: page_size
    nargs: 1
    opts:
    - --page-size
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page_size
      opts:
      - --page-size
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Results to fetch per API call.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Maximum number of results to fetch.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LIMIT>
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: limit
      opts:
      - --limit
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Maximum number of results to fetch.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: usergroup list [OPTIONS]
- category: usergroup
  deprecated: false
  epilog: ''
  help: Search for user groups by name.
  hidden: false
  name: usergroup search
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name of group to search for.
    hidden: false
    human_readable_name: GROUP_NAME
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <GROUP_NAME>
    multiple: false
    name: group_name
    nargs: 1
    opts:
    - group_name
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name of group to search for.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: group_name
      opts:
      - group_name
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 1
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Page to begin fetching from.
    hidden: false
    human_readable_name: page
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE>
    multiple: false
    name: page
    nargs: 1
    opts:
    - --page
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page
      opts:
      - --page
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Page to begin fetching from.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Results to fetch per API call.
    hidden: false
    human_readable_name: page_size
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE_SIZE>
    multiple: false
    name: page_size
    nargs: 1
    opts:
    - --page-size
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page_size
      opts:
      - --page-size
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Results to fetch per API call.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: usergroup search <GROUP_NAME> [OPTIONS]
- category: usergroup
  deprecated: false
  epilog: ''
  help: Update a user group. Only the name can be updated currently.
  hidden: false
  name: usergroup update
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID of the user group to update.
    hidden: false
    human_readable_name: GROUP_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <GROUP_ID>
    multiple: false
    name: group_id
    nargs: 1
    opts:
    - group_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: ID of the user group to update.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: group_id
      opts:
      - group_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: New name for the user group.
    hidden: false
    human_readable_name: group_name
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <GROUP_NAME>
    multiple: false
    name: group_name
    nargs: 1
    opts:
    - --name
    prompt: null
    prompt_required: true
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: group_name
      opts:
      - --name
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: New name for the user group.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: usergroup update <GROUP_ID> --name <GROUP_NAME>
webhook:
- category: webhook
  deprecated: false
  epilog: ''
  help: Get the supported webhook event types.
  hidden: false
  name: webhook events
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: webhook events <PROJECT_NAME_OR_ID>
- category: webhook
  deprecated: false
  epilog: ''
  help: Get project webhook jobs for a given policy.
  hidden: false
  name: webhook jobs
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: ID of the webhook policy to list jobs for.
    hidden: false
    human_readable_name: POLICY_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <POLICY_ID>
    multiple: false
    name: policy_id
    nargs: 1
    opts:
    - policy_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: ID of the webhook policy to list jobs for.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: policy_id
      opts:
      - policy_id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Query parameters to filter the results.
    hidden: false
    human_readable_name: query
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <QUERY>
    multiple: false
    name: query
    nargs: 1
    opts:
    - --query
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: query
      opts:
      - --query
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Query parameters to filter the results.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort by
      name ascending and id descending.'
    hidden: false
    human_readable_name: sort
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SORT>
    multiple: false
    name: sort
    nargs: 1
    opts:
    - --sort
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: sort
      opts:
      - --sort
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort
        by name ascending and id descending.'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 1
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Page to begin fetching from.
    hidden: false
    human_readable_name: page
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE>
    multiple: false
    name: page
    nargs: 1
    opts:
    - --page
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page
      opts:
      - --page
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Page to begin fetching from.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Results to fetch per API call.
    hidden: false
    human_readable_name: page_size
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE_SIZE>
    multiple: false
    name: page_size
    nargs: 1
    opts:
    - --page-size
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page_size
      opts:
      - --page-size
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Results to fetch per API call.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Maximum number of results to fetch.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LIMIT>
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: limit
      opts:
      - --limit
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Maximum number of results to fetch.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: webhook jobs <PROJECT_NAME_OR_ID> <POLICY_ID> [OPTIONS]
- category: webhook
  deprecated: false
  epilog: ''
  help: Get the last triggers for a webhook policy.
  hidden: false
  name: webhook triggers
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: webhook triggers <PROJECT_NAME_OR_ID>
webhook policy:
- category: webhook policy
  deprecated: false
  epilog: ''
  help: Delete a webhook policy.
  hidden: false
  name: webhook policy delete
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: ID of the webhook policy to delete.
    hidden: false
    human_readable_name: policy_id
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <POLICY_ID>
    multiple: false
    name: policy_id
    nargs: 1
    opts:
    - --policy-id
    prompt: null
    prompt_required: true
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: policy_id
      opts:
      - --policy-id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: ID of the webhook policy to delete.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: webhook policy delete <PROJECT_NAME_OR_ID> --policy-id <POLICY_ID>
- category: webhook policy
  deprecated: false
  epilog: ''
  help: Get a webhook policy.
  hidden: false
  name: webhook policy get
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: ID of the webhook policy to get.
    hidden: false
    human_readable_name: policy_id
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <POLICY_ID>
    multiple: false
    name: policy_id
    nargs: 1
    opts:
    - --policy-id
    prompt: null
    prompt_required: true
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: policy_id
      opts:
      - --policy-id
      secondary_opts: []
      type: *id002
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: ID of the webhook policy to get.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: webhook policy get <PROJECT_NAME_OR_ID> --policy-id <POLICY_ID>
- category: webhook policy
  deprecated: false
  epilog: ''
  help: List webhook policies.
  hidden: false
  name: webhook policy list
  options_metavar: '[OPTIONS]'
  params:
  - allow_from_autoenv: null
    confirmation_prompt: null
    choices: null
    count: null
    default: null
    envvar: null
    expose_value: true
    flag_value: null
    help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
      specify an ID.
    hidden: false
    human_readable_name: PROJECT_NAME_OR_ID
    is_argument: true
    is_eager: false
    is_bool_flag: null
    is_flag: null
    is_option: null
    max: null
    min: null
    metavar: <PROJECT_NAME_OR_ID>
    multiple: false
    name: project_name_or_id
    nargs: 1
    opts:
    - project_name_or_id
    prompt: null
    prompt_required: null
    required: true
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperArgument
      help: Name or ID of the project to use. Prefix with [bold magenta]'id:'[/] to
        specify an ID.
      show_default: true
      show_choices: true
      show_envvar: true
      hidden: false
      rich_help_panel: null
      name: project_name_or_id
      opts:
      - project_name_or_id
      secondary_opts: []
      type: *id001
      required: true
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Query parameters to filter the results.
    hidden: false
    human_readable_name: query
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <QUERY>
    multiple: false
    name: query
    nargs: 1
    opts:
    - --query
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: query
      opts:
      - --query
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Query parameters to filter the results.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort by
      name ascending and id descending.'
    hidden: false
    human_readable_name: sort
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <SORT>
    multiple: false
    name: sort
    nargs: 1
    opts:
    - --sort
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: text
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: sort
      opts:
      - --sort
      secondary_opts: []
      type: *id001
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: 'Sorting order of the results. Example: [green]''name,-id''[/] to sort
        by name ascending and id descending.'
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 1
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Page to begin fetching from.
    hidden: false
    human_readable_name: page
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE>
    multiple: false
    name: page
    nargs: 1
    opts:
    - --page
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page
      opts:
      - --page
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 1
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Page to begin fetching from.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: 10
    envvar: null
    expose_value: true
    flag_value: false
    help: (Advanced) Results to fetch per API call.
    hidden: false
    human_readable_name: page_size
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <PAGE_SIZE>
    multiple: false
    name: page_size
    nargs: 1
    opts:
    - --page-size
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: page_size
      opts:
      - --page-size
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: 10
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: false
      count: false
      allow_from_autoenv: true
      help: (Advanced) Results to fetch per API call.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  - allow_from_autoenv: true
    confirmation_prompt: false
    choices: null
    count: false
    default: null
    envvar: null
    expose_value: true
    flag_value: true
    help: Maximum number of results to fetch.
    hidden: false
    human_readable_name: limit
    is_argument: false
    is_eager: false
    is_bool_flag: false
    is_flag: false
    is_option: null
    max: null
    min: null
    metavar: <LIMIT>
    multiple: false
    name: limit
    nargs: 1
    opts:
    - --limit
    prompt: null
    prompt_required: true
    required: false
    secondary_opts: []
    show_choices: true
    show_default: true
    show_envvar: true
    type: integer
    value_from_envvar: !!python/object/apply:builtins.getattr
    - !!python/object:typer.core.TyperOption
      name: limit
      opts:
      - --limit
      secondary_opts: []
      type: *id002
      required: false
      callback: null
      nargs: 1
      multiple: false
      expose_value: true
      default: null
      is_eager: false
      metavar: null
      envvar: null
      _custom_shell_complete: null
      prompt: null
      confirmation_prompt: false
      prompt_required: true
      hide_input: false
      hidden: false
      _flag_needs_value: false
      is_flag: false
      is_bool_flag: false
      flag_value: true
      count: false
      allow_from_autoenv: true
      help: Maximum number of results to fetch.
      show_default: true
      show_choices: true
      show_envvar: true
      rich_help_panel: null
    - value_from_envvar
  score: 0
  short_help: ''
  usage: webhook policy list <PROJECT_NAME_OR_ID> [OPTIONS]
